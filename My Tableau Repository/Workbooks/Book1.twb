<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1223.0056                               -->
<workbook source-build='10.1.3 (10100.16.1223.0056)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Multiple Connections)' inline='true' name='federated.1jvv18x0defms61eath330db92d4' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore Orders 2016' name='excel-direct.151urv1000in1b12vvrwx0brnbcy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:\Semester 7\HCI\postmid\tableau\getting_started_data_sets\Global Superstore Orders 2016.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Global Superstore Returns 2016' name='textscan.1hrppnw0krn4v611inn3n1mbyuzj'>
            <connection class='textscan' directory='E:/Semester 7/HCI/postmid/tableau/getting_started_data_sets' filename='Global Superstore Returns 2016.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Global Superstore Returns 2016.csv].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.151urv1000in1b12vvrwx0brnbcy' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='string' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.1hrppnw0krn4v611inn3n1mbyuzj' name='Global Superstore Returns 2016.csv' table='[Global Superstore Returns 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Global Superstore Returns 2016.csv].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Albania, Algeria, Angola and 128 more&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;French Guiana&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Guadeloupe&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Macedonia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Martinique&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Myanmar (Burma)&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Republic of the Congo&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Taiwan&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;The Gambia&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;United States&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Venezuela&quot;</value>
            <value>&quot;Vietnam&quot;</value>
            <value>&quot;Western Sahara&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Distribution Center' datatype='string' name='[Order ID - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1jvv18x0defms61eath330db92d4].[Order ID]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Order ID], &quot;-&quot;, 1 ) )' />
      </column>
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Row ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;Small office supplies&quot;'>
            <value>&quot;Art&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Paper&quot;</value>
            <value>&quot;Supplies&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Products'>
          <field>[Product Name]</field>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.609544' measure-ordering='alphabetic' measure-percentage='0.390456' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Category:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Returned' />
        <field-sort-custom-order field='Order ID (Global Superstore Returns 2016.csv)' />
        <field-sort-custom-order field='Region (Global Superstore Returns 2016.csv)' />
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order ID - Split 1' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Market' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Shipping Cost' />
        <field-sort-custom-order field='Order Priority' />
      </field-sort-info>
    </datasource>
    <datasource caption='Orders (global_superstore_2016)' inline='true' name='federated.14yfgum03tfmhg15dwbne1v0gsdd' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_superstore_2016' name='excel-direct.0udx5sw0p7qizt127l1ms0bwtnoe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:\Semester 7\HCI\postmid\tableau\global_superstore_2016.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0udx5sw0p7qizt127l1ms0bwtnoe' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\NewShalimarComputer\Documents\My Tableau Repository\Datasources\Orders (global_superstore_2016).tde' schema='Extract' tablename='Extract' update-time='01/10/2017 09:55:08 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51290' timestamp-start='2017-01-10 21:55:08.099' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3650</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aachen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zwolle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>165</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17415</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AA-10315102&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZD-2192596&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>796</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.84999999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Market</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Market]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Market</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USCA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>7</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>51290.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>51290.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1430</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-12-31#</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-07-08#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25728</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AE-2012-PO8865138-41184&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZA-2015-TS11205146-42062&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Priority</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Priority]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Priority</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Critical&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Medium&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>632</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1040</statistic>
                <statistic aggregation='Max' datatype='integer'>99301</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3788</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;FUR-BO-3174&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;TEC-PH-6626&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3788</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28234</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-6599.978000000001</statistic>
                <statistic aggregation='Max' datatype='real'>8399.9759999999987</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>178312.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.4765451355039967</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>14</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2787663138033745</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2787440991667864</statistic>
                <statistic aggregation='Var' datatype='real'>5.1927759129250193</statistic>
                <statistic aggregation='VarP' datatype='real'>5.1926746694874497</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>886242.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Canada&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51290</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1315357695.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25645.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>51290</statistic>
                <statistic aggregation='Stdev' datatype='real'>14806.291990231717</statistic>
                <statistic aggregation='StdevP' datatype='real'>14806.147650553803</statistic>
                <statistic aggregation='Var' datatype='real'>219226282.49999991</statistic>
                <statistic aggregation='VarP' datatype='real'>219222008.24999991</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>44976902570265.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27200</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.44399999999999995</statistic>
                <statistic aggregation='Max' datatype='real'>22638.48</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1464</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-03#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-01-07#</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shipping Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping Cost</remote-alias>
              <ordinal>22</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16753</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.002</statistic>
                <statistic aggregation='Max' datatype='real'>933.57000000000005</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>23</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1102</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&apos;Ajman&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zürich&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>24</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.590022' measure-ordering='alphabetic' measure-percentage='0.409978' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1jvv18x0defms61eath330db92d4'>
      <datasources>
        <datasource caption='Orders+ (Multiple Connections)' name='federated.1jvv18x0defms61eath330db92d4' />
      </datasources>
      <datasource-dependencies datasource='federated.1jvv18x0defms61eath330db92d4'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sales Dashboard' type='sheet' worksheet='Global sales and profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sales Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cross Tab'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1jvv18x0defms61eath330db92d4' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvv18x0defms61eath330db92d4'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.1jvv18x0defms61eath330db92d4].[yr:Order Date:ok]' ordering-field='[federated.1jvv18x0defms61eath330db92d4].[Order Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvv18x0defms61eath330db92d4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvv18x0defms61eath330db92d4].[pcdf:sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvv18x0defms61eath330db92d4].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvv18x0defms61eath330db92d4].[:Measure Names]</column>
            <column>[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]' num-steps='6' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]' />
              <text column='[federated.1jvv18x0defms61eath330db92d4].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jvv18x0defms61eath330db92d4].[mn:Order Date:ok] / [federated.1jvv18x0defms61eath330db92d4].[none:Category:nk])</rows>
        <cols>([federated.1jvv18x0defms61eath330db92d4].[yr:Order Date:ok] / [federated.1jvv18x0defms61eath330db92d4].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Customer breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1jvv18x0defms61eath330db92d4' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvv18x0defms61eath330db92d4'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvv18x0defms61eath330db92d4].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[State]' member='&quot;Punjab&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]</column>
            <column>[federated.1jvv18x0defms61eath330db92d4].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]' />
              <lod column='[federated.1jvv18x0defms61eath330db92d4].[none:Customer ID:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#818b91' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]</rows>
        <cols>[federated.1jvv18x0defms61eath330db92d4].[sum:Shipping Cost:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global sales and profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1jvv18x0defms61eath330db92d4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvv18x0defms61eath330db92d4'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvv18x0defms61eath330db92d4].[Latitude (generated)]' field-type='quantitative' max='18938079.439279865' min='-11761953.943272496' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvv18x0defms61eath330db92d4].[Longitude (generated)]' field-type='quantitative' max='34768915.484061763' min='-19318482.38519894' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]' />
              <size column='[federated.1jvv18x0defms61eath330db92d4].[sum:Sales:qk]' />
              <lod column='[federated.1jvv18x0defms61eath330db92d4].[none:Country:nk]' />
              <lod column='[federated.1jvv18x0defms61eath330db92d4].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-transparency' value='208' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#998f8c' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvv18x0defms61eath330db92d4].[Latitude (generated)]</rows>
        <cols>[federated.1jvv18x0defms61eath330db92d4].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sale Seasonability'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1jvv18x0defms61eath330db92d4' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvv18x0defms61eath330db92d4'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.1jvv18x0defms61eath330db92d4].[yr:Order Date:ok]' ordering-field='[federated.1jvv18x0defms61eath330db92d4].[Order Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvv18x0defms61eath330db92d4].[yr:Order Date:ok]' />
              <tooltip column='[federated.1jvv18x0defms61eath330db92d4].[pcdf:sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1jvv18x0defms61eath330db92d4].[none:Category:nk] * [federated.1jvv18x0defms61eath330db92d4].[sum:Sales:qk])</rows>
        <cols>[federated.1jvv18x0defms61eath330db92d4].[mn:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales by Sub-category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1jvv18x0defms61eath330db92d4' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvv18x0defms61eath330db92d4'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Small office supplies&quot;'>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvv18x0defms61eath330db92d4].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[State]' member='&quot;Punjab&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1jvv18x0defms61eath330db92d4].[Sub-Category (group)]' direction='DESC' using='[federated.1jvv18x0defms61eath330db92d4].[sum:Sales:qk]' />
          <sort class='computed' column='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]' direction='DESC' using='[federated.1jvv18x0defms61eath330db92d4].[sum:Sales:qk]' />
          <slices>
            <column>[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]</column>
            <column>[federated.1jvv18x0defms61eath330db92d4].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvv18x0defms61eath330db92d4].[sum:Sales:qk]</rows>
        <cols>([federated.1jvv18x0defms61eath330db92d4].[none:Category:nk] / [federated.1jvv18x0defms61eath330db92d4].[Sub-Category (group)])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1jvv18x0defms61eath330db92d4' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvv18x0defms61eath330db92d4'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvv18x0defms61eath330db92d4].[none:Market:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1jvv18x0defms61eath330db92d4].[none:Category:nk] / [federated.1jvv18x0defms61eath330db92d4].[none:Segment:nk])</rows>
        <cols>([federated.1jvv18x0defms61eath330db92d4].[none:Market:nk] * [federated.1jvv18x0defms61eath330db92d4].[sum:Quantity:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1jvv18x0defms61eath330db92d4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvv18x0defms61eath330db92d4'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Albania, Algeria, Angola and 128 more&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Macedonia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar (Burma)&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Republic of the Congo&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Swaziland&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;The Gambia&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvv18x0defms61eath330db92d4].[Latitude (generated)]' field-type='quantitative' max='18938079.439279865' min='-11761953.943272494' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvv18x0defms61eath330db92d4].[Longitude (generated)]' field-type='quantitative' max='34768915.484061763' min='-19318482.385198943' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1jvv18x0defms61eath330db92d4].[none:Country:nk]' />
              <color column='[federated.1jvv18x0defms61eath330db92d4].[Country (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-transparency' value='208' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#998f8c' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvv18x0defms61eath330db92d4].[Latitude (generated)]</rows>
        <cols>[federated.1jvv18x0defms61eath330db92d4].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' preset-index='8' sizing-mode='fixed' />
      <zones />
    </dashboard>
    <dashboard name='Sales Dashboard'>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Orders+ (Multiple Connections)' name='federated.1jvv18x0defms61eath330db92d4' />
      </datasources>
      <datasource-dependencies datasource='federated.1jvv18x0defms61eath330db92d4'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='80000' x='0' y='0'>
              <zone h='50000' id='1' name='Global sales and profit' w='80000' x='0' y='0' />
              <zone h='50000' id='9' name='Sales by Sub-category' w='40000' x='0' y='50000' />
              <zone h='50000' id='10' name='Customer breakdown' w='40000' x='40000' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='20000' x='80000' y='0'>
              <zone h='18668' id='6' mode='radiolist' name='Global sales and profit' param='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]' type='filter' w='20000' x='80000' y='0' />
              <zone h='24334' id='7' name='Global sales and profit' pane-specification-id='0' param='[federated.1jvv18x0defms61eath330db92d4].[sum:Sales:qk]' type='size' w='20000' x='80000' y='18668' />
              <zone h='10834' id='8' name='Global sales and profit' pane-specification-id='0' param='[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]' type='color' w='20000' x='80000' y='43002' />
              <zone h='14334' id='11' name='Customer breakdown' pane-specification-id='0' param='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]' type='shape' w='20000' x='80000' y='53836' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='7' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4668' id='6' type='title' w='100000' x='0' y='0' />
            <zone h='94917' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='4668'>
              <zone h='11307' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4668' />
              <zone h='83610' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15975'>
                <flipboard active-id='2' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Overall, Our profits look strong' captured-sheet='Global sales and profit' id='1' />
                    <story-point captured-sheet='Sales Dashboard' id='2'>
                      <capturedDeltas>
                        <worksheet name='Customer breakdown'>
                          <filter class='categorical' column='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]'>
                            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='Global sales and profit'>
                          <filter class='categorical' column='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]'>
                            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                          <selection-collection>
                            <tuple-selection>
                              <tuple-reference>
                                <tuple-descriptor>
                                  <pane-descriptor>
                                    <x-fields>
                                      <field>[federated.1jvv18x0defms61eath330db92d4].[Longitude (generated)]</field>
                                    </x-fields>
                                    <y-fields>
                                      <field>[federated.1jvv18x0defms61eath330db92d4].[Latitude (generated)]</field>
                                    </y-fields>
                                  </pane-descriptor>
                                  <columns>
                                    <field>[federated.1jvv18x0defms61eath330db92d4].[none:Country:nk]</field>
                                    <field>[federated.1jvv18x0defms61eath330db92d4].[none:State:nk]</field>
                                    <field>[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]</field>
                                    <field>[federated.1jvv18x0defms61eath330db92d4].[sum:Sales:qk]</field>
                                    <field>[federated.1jvv18x0defms61eath330db92d4].[Latitude (generated)]</field>
                                    <field>[federated.1jvv18x0defms61eath330db92d4].[Longitude (generated)]</field>
                                  </columns>
                                </tuple-descriptor>
                                <tuple>
                                  <value>&quot;Pakistan&quot;</value>
                                  <value>&quot;Punjab&quot;</value>
                                  <value>-3046.9800000000009</value>
                                  <value>16502.550000000003</value>
                                  <value>30.859999999999999</value>
                                  <value>72.310000000000002</value>
                                </tuple>
                              </tuple-reference>
                            </tuple-selection>
                          </selection-collection>
                        </worksheet>
                        <worksheet name='Sales by Sub-category'>
                          <filter class='categorical' column='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]'>
                            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvv18x0defms61eath330db92d4].[none:Market:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sale Seasonability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1jvv18x0defms61eath330db92d4].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Cross Tab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]' type='color' />
            <card param='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global sales and profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1jvv18x0defms61eath330db92d4].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1jvv18x0defms61eath330db92d4].[Country (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales by Sub-category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Customer breakdown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvv18x0defms61eath330db92d4].[none:Category:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Sales Dashboard'>
      <viewpoints>
        <viewpoint name='Customer breakdown'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global sales and profit'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1jvv18x0defms61eath330db92d4].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1jvv18x0defms61eath330db92d4].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1jvv18x0defms61eath330db92d4].[none:Country:nk]</field>
                    <field>[federated.1jvv18x0defms61eath330db92d4].[none:State:nk]</field>
                    <field>[federated.1jvv18x0defms61eath330db92d4].[sum:Profit:qk]</field>
                    <field>[federated.1jvv18x0defms61eath330db92d4].[sum:Sales:qk]</field>
                    <field>[federated.1jvv18x0defms61eath330db92d4].[Latitude (generated)]</field>
                    <field>[federated.1jvv18x0defms61eath330db92d4].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Punjab&quot;</value>
                  <value>-17700.600000000009</value>
                  <value>46062.270000000011</value>
                  <value>30.859999999999999</value>
                  <value>72.310000000000002</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sales by Sub-category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cross Tab' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9V5AdV5qg92Xm9d6X90BVwXuSIAmaJtlupnvMjtkZzcaGRrsR2geFHhSr
      UIReJhSKkGIj9KAHKXZ3VrEa7cz07nRPs8nmNJsWIAECBFAAqlDe23tvXe9Nej0UiKZBAQWQ
      0yg264sgq1CZefKczPyP+d0RTNM02WOPbyji467AHns8TvYEYI9vNHsCsMc3mj0B2OMbzZ4A
      7LHLMKnkU8wvLNNUjc8dMyjmCuj3UtuYBpvry8zOLVBXPn/d9uwJwB67CqWS4u9fe4tscp6f
      vX2Zz37KCu//w9s09HtcaCi88/pb5IsJ/uY/v476KSFZ/PgN5vL3vp/lq6v6Hnt8eYrpVcJd
      J3jq7AAL/+9P+eDHiyyJUQ6GYGojRz7dYOHjtzg/MkG470k8yVtETpzmudMncHjCHDtzjtz0
      v2d2ZoJL77yN1D6MZ+UymWUblU6TiyOTBPtO82e/+xwSeyPAHrsMp8dPPhenXsmj2j1YTZ2z
      3/oulUyBl3742/SEPcxNTdM2dILBniiCxc2h00/dvV6TK6QbFtJLs0T7+ihmyhw4up+z514k
      sThL+9Axhrtjd8/fE4A9dhWe6H6eGHDxyws3efl7L9M9fIyoS+Tsc2e5df4Cge5+XvrBD7FW
      8xiCxOCx47gkAQSJ1piFX/7iPZ7/nX/CoQP7sQgOzpw4yMCJ51m7dZ7TL30fqVZAFyWEO/cT
      9izBe3yT2RsBHgFd11EU5XFX40vTaDQedxW+Er5MO/YE4BFQVfU34uOpVCqPuwpfCV+mHXsC
      sMc3mj016GPG1BU+ePsN4qksnSe+jbxwmURZ5vTLP6A+d5WxrM6//OPv8uZPfkyqUOHEt/+Y
      Yz3Bx13tL2DWNvnbn71PtaLy/d9/iQuvv0ld9PHHf/gSH/zk/8N1+k95qk3mvfNXyVRk/uBP
      /pSgU3rc1d4bAR47opXnvvNDTu9vJbO+xKalhT/4wTlmRic4de5FnNQAC9/+3T9iuMNLudZ8
      3DW+J6Yzxh//4e8QsRvEZ24SOvl9nu+SmSn5OXv6EJqm4420c3h4H06rhd2iedkTgMeMgMG1
      d3/GgtrJbz8zCCaYmHz21Qh88PqPqMVOcna49XFV9b6IZpOf/PXfsv/cd+gNujBNE8M0EYXP
      nIXL48NlN6g1tcdV1c+wJwCPGU2uMXJ7hmpmkcmURo+U46dvXObw8f28/8s3WV1aZmRihGu3
      E+SXJ5hZ38am/5gpLd9ivqgze+saaushauNvc3nTy4AtzrsfTTB1/QPGxsa4PHKTqmrDbX/8
      0x/YswM8Es1mE1mW8fv9j7sqX4p0Ok0sFnvwibucL9OOvRFgj280ewKwxzeaPQHY4xuN9Bd/
      8Rd/8bgr8XVD0zR0XaeSWWNsLk6sJUhqM4fP6wZDZez6FWaXNnD6w9hMBU2UiM/dJlEyKCXm
      yMpWwn73o93cNEgsT3Pr9gySN4TPZb9zQGV1ZZNAwLfjomq1Gm6XnZmxERIVE59FoaJJOG0W
      UPK8//7HbObLhKNR1EYd0SIwevljRLeLybExnIEWXI+6mDUUJm5cZ24lRaglhk3a6oublSLZ
      iozH5XiodtRyG4zNJ4lFg6TTObxeNxgKo9euMLccx+kPYzVkNFFiY/Y2yYpBcWN2bwT4MiRz
      ddrDFlbnlnH4Q1t/NHVsgXaeffI4q7MzlHM5ioUE18eX0UpJbs2uYpEkVufGmVlOIFeKrK+t
      kK3sUL9vaizH85x44glCLgvJ5VlujE7S1A2ymQJKvcitGzfI1xRSa/PcGJvhvgpHpULTFkOv
      pkjlK3ic1q2/a1XaBs9wtD/A7GKCQjZHfHWMpWSD9Ow11koG6HXGb90gWahRLhVYnpujea9g
      lXvRzJCSfZw+fhCroDMzNsLUUhy1WadUrVNMrXJzfAZZ05i9fYO51dR9bQeb+QatQZG1hc++
      C3uwk2eePMrq3BzlXI5CIcHIxApqMcHo/PreCPAofDIChNwSK8kyLpvG+Pg0hsNHxGsjW6gQ
      jUYpp1Kosoy1vRUHdoaH+jAlG72+Bm9dWSCT2sRnkUnoPgbagoiC8OCbIxL2ORi7dRPV6kMp
      JlleW8a0R9AbdXJr06wXKmQKFer5DFann0g0guUeRddqNdy+EHJhjYZho1nJMj05R7CrH6dZ
      Ilt30tbiJrmRRqtWad3fhmRGGep0Yob2o8RHmdvIs5ktoxbX8XQMEnTb2VEzLF5cRoEbY7ME
      WsIklhaYmF1joK+duipz+8pVivksptvJ2mKCcEsLIZ/nnmXXajUiXitrqQpOi8r4+DQ4A4Q9
      VrKFGtFohFJqE7XRxNbVjt20MzzYi2lx7LlCfBk8kQ5aK018dpO4R8HQt7q/UjrO7VoBxebH
      Z9QQRAmbzY7dbsdms2Gz24nGYrTFQjjtKn2dXUhGnXxFQDQaeP1BJHGbr8jUSWym8AUCyJUc
      tYpGR3sLhqoC4PIGaPO6CEeiiI0cC/Nz5PcN0ebaphGCSPe+QRqLm9itMnJTRbnTi68vzlBL
      NAj1H6WxtoTFYsVmE7DbrNgEO06Xl9Z2P6FwFEMu0xHxUS8XsTrd1Oo1QoHA9g+vWSRRkvE5
      LdTKGRqCn5hHuDNaifjDEXzRGDFfEC3mZWFxkd7OlnsKMoA32kmsIuO3G8QLCvqdd1FMb3C7
      lkW1B/GqlU+9Cxs2m23PDvAofGIH8Pl8qKqG1SpRLpVwef1YRYFquYisCwQCfkxNRbBa0FUd
      m9WComnYrBaq5SKqacHrsoPFhmRqyCoIpobNbkfYrhs1TRr1KnVZwx8IoNbLyIaIy+nENAws
      EpRKFexuL4LWpKkJBP3ee/acn+jPTUND1QUkNCp1Bb/fi2Bo5PNFJLsLn8eJqihYbBZ0Dayi
      gYIFKxrFUhmLw43dKmK12FAVGdFiQdM0HHb7F296tx065VIJQ7Th87iolIoIFjtulx3DBENt
      Um2oeH1eGpUSot2Nx+nYth3RaPRT76KMy+vDKkKlXEIxBAJ+P6aqINisn3kXewLwCOwZwnYX
      X6YdnxGAUqmELMtfWcV+U9E0jWZhDIe0Ox3TdkpN9eC2Vh93Nb40tZIDdyn3SNd+Zg3wde/R
      fl00m01K6et49PjjrsqXwtAP4DenH3c1vjRGro/gzUuPdO191aBvvfvOIxX6VZFPrjA6Oko8
      +5sRufTVYbIwm+Ktj5NUFANMk5mFHLVPJYRqVupMr9UwDYPbY3FGFsqYJtQKFWaT949mq5Vq
      vHtxjUR5a0maXM+TqNxZGZsGUxNJbq/WMA2dmzc2uLlYQak3+PBGiqYOmcJDRMvpKrdmC5iG
      weREkkuTdxJfGQYjNzb4+fsrXJsvoTVlzn+0zmpeoVlrMr5cvm+xqUKF95YLNA2TRlNmKle/
      e0yWFd6fSzOWbdxfCxRPJigk5vngyjiDZ86h5ZfIJjYJDz2BTStzoCfGdEpBzM0xvlrlWy89
      w8rCDLIODquXQ90uFhsBDnQ82shSzJZo7e3F77Cj6TqSAIYJpmmgGyYiJqqmY3c4ScTXEI0G
      grODlrATBAnT0BFFAU1VES02NKWJaLFjs+4OT8RHxjSQnE561SrX50qcbhV47VKcP/uhH3dI
      BNPk+serzNsCeKt54qaHEyEbGBpXxuNk6yGG2pzbFU4i1WD/vgAjt5L81pMR3r26TudBB+0H
      XWSTBdZrIkI8gVzyUrc5MRMZfrFioSNmYWIqC0470Z3E7JgmM5Mp3p6pM9hqx3Q4seQKLOV9
      7A+JDPSHaClXGUsqvL+aoWeoFb9dZCVeZC2jc6RvG6OfqvBxSuZQwMLVZI2YoLLaMDkY3lKF
      ybpBf9TDZDx/fwEwDZNcepN6o8xb714gKJX5ve+9zGtXJnBS50DMysRyhWgtSWFpnIuxbpZu
      3eTP//yfc+HnP2Vz2cbBl39vB0/i3jRrORZHCwz295OuagzHTOJ5iK+u076vm+zCCoJDpLXv
      GKXNTcxmjorZwOiyoPoGya5M0B6wML9eo6vDz8j1cSzhLn7vO898vS2AgoRdbvD2ZIkXXwhy
      azbH2WPhu4dT6xncnS2EywoLcZlcvcbFip8n2yRaB6LI0/dLHSjQ3+dndDLLgf1hRifyPHW6
      hcSdDrQua/T3hglUNWaadhanE4g2B08PO7k0kaOn00dhOYchtPPEgPe+zWhU66Q1B4MxDbff
      SWtTZbrgojMggQDBoIv5mQxPn2rj7b/PEC+uM3y8k6cGI2TKme0LliQcusyHa1UEr4fnh0Nk
      1kp3D/tcVj6ciVNzuu/9HWiNMm+//iMkTxdry/MYFi92qwkWK3arhCAIWKspfvbuJeqyytz8
      PF6fDwGTcEcXfpeT4we6mMpCl+fRe1uXv41nX3iBnpgXU9eplUvoQEvvMAf6Wol0DnDy+GGs
      pgaiSEd3PwcPH8AmgKGrVCp1sDg4euoMNrVC96FTnBzqYeeZI3cpqoYUC/Inz8cYn0gyvljg
      7fdXuTKz9ZLnlopcH1njnctJXG4rx5/px1atM7GQ59KlNc6PJChtax42mZ7K0NIXoT9iYWa5
      wC/eWeXKWAYVsFskNrM1FtYaNGo1Tj/Zz3BMQAgG+P1nWml3m7h6YhSzD15cZ5NFRic3ee+j
      DW5M5ZnO6Dx9OsYnkZJ6rUbF7iFksxBscfEH3+8luVp6cDSZKPLcYBvf6/PT4fmiKrZY13jp
      aCdR5HurQb+0ZtTUufCLnxA88CLHBlrYiWHwXpTzeVyhEBbTYGlqlIJhp7+rE1OwEfJbyOeb
      +DwWGgo06hUCbgs3R5c4dGI/02OTuGNd9Ma8WBw+LGaT8dFbCP4ujgx1f6kRoNlsUpr5N3jE
      x7QI1nWuXF1jvmDyWy/2EHZJpLJVXE4r56+l+O0XuxE1jaWcQm/ExvkLy9g7WnhmyIsgaKys
      a/R2OSnoBwhKn1sEmyZXP1pmLN6grS/GD56IItcbZJsWSuUaB7p9XL2yghaO8MyAk7cvrGCG
      grxyMkwqVae1xcmVSyvEhjvZH7XtqDlL8TIRu8nP3tugabPy7KCHTYuPkxER02kj6LLQKFX5
      2QdJnn62l/WJZaaSKl39rXz3TJjiRh/hzyyCTcaW08zJFn5nKMilqQTzVY3+9gjtTui0C/x8
      LkdXS2jPDvAoPHYB2AbD0Kg1BLzunY269xSAXUCtruCwW5GknXWdhS8IwM7Zc4V4RMSyjKjV
      Hnc1PoMI+AF2qIQRrAqiurvaAOAFqKs7Pl9QduqB90X2BOAREctNpEb9wSfuYgSvglT5erdh
      i99QATBNE8MwEAQRURQwDAMQAAPY+ttOrhVE4YHrkK2ZoLAzT8bHjolumBgmWEQBw/zV74Ig
      gGmi6iaCICCJoBtbvwuY6AYgCFgeML0wDBOEraetGybSnbJN0/xUeVvHEEASBQzDRBJFTMwd
      erYCpolugiiApv+qLPHOvbRP7n3nXqIoIArwyadw7/uYGAbopolFFNCNO3k2BOGuk6H5yTPb
      8TP/tWOSWBhnZqOAKFo4ffYsU1feJjxwhNTMNC37hvH5fcSC99YFr82OspKu4Al1cOLwwAMF
      YHJ0hL7BQWqyhVjoEYNVfl2YBheuJ1gsKBw8EKMez7NcUjh8tItnOhzUk1n+95Eqxzu9nI5J
      nJ8rUZGsfKvFwpWNOotFnf/lD/ZtX7yu88ZbU2gHBmkvZhhNyezbF+PlfV5ymRKvjhaw2m2c
      2+/m4lSB5VyTs/uDLGXrvHC0lVxZ4dzgfTxBP0UqWeD/uJLnf3o+xs9Hc6xm6/zR94YZ9ovc
      nEwxttkgFPPTKTS5lVJ58kgrh8MS/9fP5zj71ACn2+7hcGeaXJ5PMVOS6WsJUC9WWSvX8bXG
      +Gf7t+o1t7rJTzPCLhYAUydTFXjhhecpphZYnpxkNVkE9yLr2RqhziZ1u43lqXlWMwpDgx0s
      La7iiXZzdLAHi0UC0UZXVzuzszMcGOhieiWPVN8klS/j7zyAo7pOolQj2nUIAE2tUmu6mL89
      Q6Kicmh/FxOT84S79nNkX8djfiCfQpA43OVls1km5LbR3+MlvVAl4tpa/KYKCiGvxEC7h64W
      O7/ntXN1o8mBoSA90Qo3q5b7vHiTtXiRvr4Qi+hUBSf/8pVW3posAl5UzQBJRJLrlBxt/LMX
      3JyfKtHuMEiWJNZTdQRdZaXkodd//89LVzUmsjqnul2EIj7++Utu3h7NMeiXAJOTh1qIBEuk
      NFickwm4bQScErPLeYb3Rdk2ZkwQORDzsNEwiHgcHOv2M7aWI9ay1VkqzQZrmp0DAWMXCwAC
      kqmh6AZKUybQ0c9Rh4XhA5343GV6IgKrVYV63eC5c08y/fH7lJoi5p1EqS09w4TamkxOTqNI
      BoauUK428NncPHPuOKO3pxDsPp5+9iQT41PYAEOTqRdqTM9vEAoEaBgCVkmgUa2iA7vGfmyY
      eEIenhswmM436en28bxuMJNXGApaae2P8c97DD4cTxORAswWDJ4/EEQAbsQbnDywveekoRu8
      PpLEYhqsuOH5iBVFM/hkCG1pDfAnQS9jE0n8DoHV5QKdfWGG3AKxSINEusKy4WRmrUjvkch9
      m7G8kubiXI1Uscbhvgi+UpG2/vBdFfXKWoGSzcnpbhuZRIMnDvo4P5ZgLl5FwCDYDodao3xh
      eDdNnG4nz3fDaEnmkE8krUkcdWyVfHEhzURRZ6Gi7mIBECS6O8Ncv/Qhdl+Uk91uNmUPIOHx
      2JFsIh6ngcdn5+Kla+zf109qehWXa2v6ko0vMruaJtDaS1QocunaGM5QL3IxzsWLGToHD1Nd
      HuPSxRR9wycQaymsVieekJOhrgwFWcImSYiigMWyyx6TrnFhNEmiavDUwQjv3UiQahicPebh
      w+kc+0MW3hrPE4j6SMfLTKRk5tIN/pvTIXxBN27r9hNCUZL4737/MJTLXG44aWkU+esPEjx9
      op3JRIX+gJU3riaxhfycdZncEKyc8W51DeW6Rl9viNmrCcK99//4Afbtb+cv9sPl+RyHIlZG
      ilZO+UTkUoUbZZHMUpGEUiRRDHGo08Yb19MMDcb4o3PdbKYryJZ7xwdgGFxeTLNS1TjRG6VQ
      bDDYGUAAJrNVXjrcw0uGzpVk7ZtnB0il0rS0xACTbCpDsCX20D17s9mk9u7/jLex/I9RxUdG
      11U28gY90fsEonyKrPckkcrNf+RaPTyZQh2H24HXtjNzZYbjhGavPdK9dlnX9o/P1scPIBBp
      efRgENMmYZi76/EJWOhys3NXj13qFBgNbhe/eW8ECXA8mvpud73BrxF6zIMu7r405Q+DoTlh
      d6YafThcIlKP9ZEu/Vo7Re6xx5dl16ZFMXSV0WvnuToyRQM7bZEv6pU31tbw+P3b6/g1mbmV
      OOHgznTSO0XTNOTsR9iExxSoY+p8cGGZd0bSuEMelifW+MXHGdp7/HhtIqn1LD95Z5W8KhG1
      Kfz164tkVAsercqP31llvQpDHW6aRhR3YfULxc/Nb/KfrqZpihaKyTyvjWZRrTa6/DZq1To/
      ubjBzXiDVq/Ia1fiLJcM3LrMj0fStEQ9LCertAZ2tg5plmv824/SDHhM/vZSgvNTWWJtAUJ2
      ETC5eHmJTbsPJVvk3cUKh9rdzK1kOb9c5+CdVBd1exsuJfnpB8TsUp5LqzWGW92MTiV57Vae
      SNRDwC6ilSv8n+9tsJxTd68ACKJEW2eMWsXKiaP9pFZnGV9IEI2GWJq8yVpOoVlYZ2l5A5sv
      QjGxwMTkHDZ/lFJ8lvH5BNFokPXNDGGnycfXbiF5gkhynusjo8iCHU2u43bZyGTKuN3bBYh8
      kccuAAjEYh4CFp2crlEoWPnhEx5uJk36o3Zu3E5x4nQn6bUsG0mVF78zwPpyFqmm0HG4g2Kq
      wlCvfxsBMFlar3DyWBuHWxyEA046fBIrJZ3BmBOLRaKnxU0lVyUtG/R0hLA2a0xkDY50OVlN
      NggEnfidlu1Tu3xyJ9PgymyRqmny9HCUkwMBmk2Vw11eLAJkUiXSVYWCw8vRVgeFikxv1IXT
      YaVQVumNbb2zLwoAuFw2cpUmvRErN1d1fv+4l5ubCgNhO9lkFWdHgBf3+b8eUyCzWWRkbJZq
      boPJW5NowW6O7O9CEJ0cP3qQQj5Lpljj1OFessVN1tNwcsDL9PJWoPTEzCJnnjxNYnGOueUE
      p88eoZQqU8+lWJ2fo2F9uEXXY0cQqGbLzGwqeOxgtVmxOyxod0Iiz55sZXwsyVKqSRMRj3XL
      bcTltTFzO4lsiPf1ngkFbFy7vclrYznUhsyNtRp+19ZyURRhbrFA02LlcF+AfKrIZKrBsX4f
      qYJK0GFwaSLNL6cLD2xGYiPHdEFlM1MjWdOpZIrYwgHsooCh6bw5lkVRdFbTdex2y92P1eWQ
      HvDhCrjsljubc5hYrBJWm4iubyk8XSEHqZU8f3c5/vUQAMFix+91YnMFaGkPkVmcZHRmBZvL
      jdViQZIEHE43dosFUXRh1ONcubVIwL/VQwRdEpc/uoJm9WA3G1z5eISKotPWHmVqtUCHf2d+
      67sGWebKTJ5crkqmaqGZT/LvXl2nq83O7HKRcqlBptAg3BbkdI+Fv/zRBLmmSKMuU6wo5ErK
      9kElJuQrKpWGiiiY3FgskCnLJEoqU4kK+UyF29kGiVyNfFVlsyQjOZz0RZ30Bax0xNwYio6x
      gyiQQNDL031eXHYJm2hyLa7wRKcdU5GZzmk8eyhK1CVhtwlcHY3zxkiSNyaLfHhzgzdGErw5
      tV1wjMGH1zZ443qSN+eamPUi//a9JC1BO1OJCtW6SrmuoZm7foMMkzs+altbB5nm9gmjfnXa
      nSs/ayD85NqN+dssbGRpGziKo7aB7O1isDPyUE5wjz0e4I4jF3C33qYJpqFwa6bOqUMBTPOz
      xz7/uyAIFLQDxBY//HzhW2Vtc/0n//7EUe7T5ZnmljPbnR/3fVefbY7JHR8+QCCRLGL4vHR5
      pLvBWeZ92pH7gj1jyxnOvPN8BLZvwy5Xg37KO1PY2QMVPvfz7t/vXNs1eIyuwU/+Gv0K6vgY
      EAQ+P70WBEC0c/qw/Vf//vSxe/y+TeF3Pqztr9m+bGGH9/h8eZ+9rqM98MVjd/93t5r3KxHx
      c3Ob7drwGQHYS4y1MzRNQy62oKu7vP94AA17mKz35OOuxpem5uh+5Gv3EmM9As1mk1p1bte5
      Qjw0XmNXukI8Co/ajm3UoAp/9x/+byYWEjhDbYS8W46ny1deZd06RIvn1xM1srk8ycjYFLrV
      R8h3fzXlVrDMFjudez4qmqahLr2PXSv+o95nW0yTW1ObvDVbprvFw/zcJq/ezOAJeYg4JWYW
      0/zkeorxVIP+oIWfXUli8zlx6gp/fzmBK+gm6JDuqT78wq1kmb/6YJ3ptMr+djcWwaRYqHF7
      U6EjYOH6eJJ3Fyr0tri4fCuB6nTiUGSqkgXnA4JuVEXlzY83mCgYRCSFH11KcG21QnuLB69N
      RK43efVyHNPtpLRZ4GdjeVqiHnIbOf7LtRSm00GHz3rPdswtZvjx9TSi3crHowk+mM1Ts9jo
      DdgwDZ13rm5QFG3brQFMZEPi5NEjRNzw4ds/pywE6DKKXDn/JuutMY61GUxsyPS3uTAih9HS
      M3S1BHn/4jVCvUdpk9KspjVcLpF9x8+yPDHKk0898VAZIppNkSdfeAGnoVFvytgtoOpgaCoN
      RccmGFTqTcKxFuKri6j1HKq1g319EQTJjq40sVokGrUKktNHvZjF6gkR8Ox895HdiUlnV5iO
      YI0b61V0ReC//U7/3aPDAzEGe0JcmC5ydTrPK2fb+XAsQ0IweOlsB5dGM/Q92bajOxXSVQ4d
      6+RM5BNXA5N0DeqNBuCktzdKR7HErdkkda+PpY0SOYfEU4M7UC0L8OyJDhamEuRd3fyL7/i5
      Or6J0yZuBf3cznLuiU6CFqjaffxhyMF7S0Uchv6Z9t7r+SSrOv/1K33YRTjZ5WFzs8imueX7
      NLuQo7U/Rmolt70a1DR0ms0m2YURLk6sk4yvUqqrHD37EpXkFGtL06j+HqJCgURJZX19hXRi
      lVK9wcUPPyK+PIO/7zB9YRsjH/yCVNP10OlR6qUkly5cYHUjweRSnHpxg5XVDS5fvkVdrTE+
      Ok0+m2A9WaRQKKCrKqqiUkgukCipTE5Pk1qbZmIuTnp1krfeucCb713+EhGkuwRBRClW+OlE
      ia6Qg0axyr9/e5nJnHL3lHSmTDDi4UiHi1cvrnNzs8FAq5PXLq4zk26y05BzXRK4NrLGj66m
      7uz+IjLY6dnyoBUk6rkSr89U6eoIo6YLqIZBNl/hb68kaTzAK89qlZia2mS0ItHhBKNRpyC5
      CFq3Yh4zVYVfXFrlwlIVUW7yn69n6I64sDSb/Lu3l7ga3y7630SpNfmP7y5zI9HANA1mUzL7
      Y1sKgqog0uWz0R6ybicAAoFYJ0ePHKZ73wGiLolgOIbXH2Hy4qs0LVECgRBdbTHs/jDjF95g
      LVOnWSmgW91EAl5c/ghtET9t+w6zMDHPqRPbh+Btx68SY/lRG1U2N1PoQHv/EF2xAMGWDvr7
      erCigyAQikTx+jyIgkClkCVXqCDa3Bw8dBCHCMMnnuTZUwceuh67DlWjYrXz8qCHuVSF/d0x
      nh9wsZZTqDY1TNNkMqVyqNWOL+ji5UNhhmIugiE3Lx8O0x1xslPLh2mz8e3jrXhNhWJTo6EZ
      ZIsNMmWZfKlJ3eHgpQE3s1mV33qilfaAE5tVotNpUn3AZvCNqkKoM8jxgM50QefaXIWnhryY
      hkFVE+iJOHn6SIxysUZOk3jlcIjFzQpdbUFeORggkWne2w5gmHR0hnh52M9GrkG9WEX0eXFL
      AtWmRkgyGVsvs5hR//HtAJsLN7m5rvOd588gPaTZrV6pYPd6kUyD5NoSVcNKazQCggWv20Kl
      IuNyWpBVE0Vu4HZILC4m6d7XwfriKo5AlJagC8nqREJleXEBwR2lrzP2yMm6YNZb3zUAACAA
      SURBVBfEAxgGUysFNmomTw2FKKRLLJRNntrn4cJEie+dCJEp6bQEbNQrdS4uVTk1GMauyFxZ
      qXF6OEzILu4oHkBTVK7M5Am3+tnngbxpIb6aJ1nX6WrzITYabDYFzg4FsRgaChbUSo2VhsjJ
      Lvd9n7Mqq1ydyyO4nJwd8JIpKsT8djKJPIu4OBkWuDJXYnggRCNfYTavcnowjF6pMbap8ORw
      CL/tXu0w2UyVGU+rPDkchpqMxe/AJcBKrkFv0M7NuRz+mH+3G8J2J49dALbBNA0UTcB+n4iv
      T7NbA2IUTcciiTvOLPFl2vH1VmQ/RoygC81//+SvjwMJ7r8r5KcwJTvswszzNsuvL1BnTwAe
      EcNtxRS/3tokU3u0IJLfJHa1M5xpaBRyWar1Let0o1qmUpepV4rUGsp9rzU0hVw2S7UhPzib
      MKDITb5Ok8FGrclqooqsmaiyymq8SkPdUruYpkmx2EDRuXOsTL6moakaq+tlNrI739qpXG2y
      tFllNddAMwFMqlWZeFHBNE2yxQZruSaaYZLK1amrBqqi3Tn3/pimSb7YYKNw5x2ZBqnSr96r
      oqispmvUVJNGQ2Et20A1DJKZGkubVVJV9TPv1jRNypUmDR0wTUpVmaZmYpomm7n61vl3LlBV
      jXxN280jgMnazG3SsgWtXuHAqadYuH2D9qGDrE8u0bW/j1rTtW1irOW5ccqaDYerztC+7gcu
      euemxr8+ibHQGL2doVyXWS5FaaxuInk9OPwOnFaRYrrE1dFNep4YJlStMLdeY300yysHHHw4
      ITM4FKQzsrPRq1KVWUjWmd2U+fNv9yJoCr8YTSOYOkeGW8lsVsgWZRIRK9NZjY4WL0Fd5cjQ
      vfcm/jTNpszIfJF6o0n9ZB/2bI6/HK/zv/6gBzCZWS6SrGs0E1WsTQ3JKrBa8eBuyGzka9R8
      fv7p0V+FpdaqDcbGkzA4wElrnUtzOTq62+mV6txYb7BRVvnzZzuwSgKTi1nm69LuDYjB1FhO
      FDlx/Ageu8baUpyFpRUEUWF5NYff70UVRbKL44zPbmARGly9NkKqrNPZGkFtlFjdyNDW08fq
      0iytIRdjswlyq9PMzM6SaYgUVyaYmJ+j0LQiaVU8HolcBdanb3BragGPU+DipavUTDut4V+5
      ieyGgJiOdg+Vokys1crY9QINwaS3N4jPLuL0OAiICnWnl66QxNitJJ5YkIBa4+pak4G+IB1B
      27YRYQCmYVBuaIQCLlqdILg97AvbqBZlDI+DJ7vdrOV1ohaNybzGyR4PEysVrBYBQddYrZr0
      he6/abbFItEVspGuGPRGJCbSOmEHHOjYWlvFQk5UWcXrdVDIVElWFTZlkR+eiNJsqBzsC+Kz
      inctwTa7lS6HzrrgZl/IRtRhUDXsdEcdRB0CDV2gP+ZEFARaQ05yZWU3T4FEbIZMVdGolMqE
      e/Zz9Ngxnjx9gmPHTtMb86JpOlXdwnPnnqAcX0N0+bDd6Xb8sR6ef+4pUotz1GQFTZOpNWVE
      V5Bnz51DkEvY3BGeefYcZmMrMtw0dNRagcXNMkGfF9PqIhb20yiXd7yw/PVgcutWktb9LQzE
      3LT2BPmjF6NcHftiEEpThR/+9hD1QoXWgQ7+hz8dYmFy84GGMLUh8/5kjppmMrpS43jP1qho
      tQrkqyqVWhNBEmnvCfO9ARfLDQv/6pUeBsJOZFPAW69TfoAhTJVVrixVOHs0Snq9wNhSnndu
      ZZjNb02DZpfziH4vxzo9fO+Zbv74dAudfiuaqpDSLLS5drZYbpRrjGZ0XjwYRvqcRO7eKZAg
      0dffxdi1yzgjXRwJOckoAcBKIODG4hAICAZh0c9Hl0c4cOAg+Yl5rLY71r58gqnFBC3dg/gp
      8PHNWQItfciZOS5dzjFw6CjZmRE+upxh+MgpzGoau8NNMObgqF4mWdKxWSR0XcMT9O2unkLX
      WFwuc2OxxJGT3RzqtvB376c590w371ze4HCbjdc+yqD6ZL497OLyeI7Wvhhytc7r76XoHGrj
      Qctfm9vJ751xgq4SiPjwSFDOl6k5PQTUIh+sifz2MS8fjMRJqyLfORWgVldojXqQmnXWNDve
      Bzy0ZlNmeqnIXKLK957u5l8Pi4yulOg2G5xfVZGTVVYWyix2h+gSmtxIaXz/iXZq5SoH+gJf
      mNYW8xVevVYgb2sQHfLywWSWhlhF77EyvlJnNl7hn5wKIZsSU5MJxrO/BkPYbiOfLxAKBQGT
      Yr6ILxR86I/7sQfEbIOhK2RLArHQzrQ79w6IefzkKjJep+3uaP4g9uwAD8HWxw8gEAg9el4f
      oaEiGLsrdkICWqwmVHZWL0HcXRO7Twh7d5ZR4i6aiVl5tJ3fvnEC8FUh5epYGvffq3a3I3i/
      3jvdf4LZMDESjybMu2pqu8cev2527Qhg6Cpj1y8wv1Zj/9ETnBju+cI5K4uLdA8MbC/FWpOJ
      xQ0ODz28J+puxzQN/uqNWc6eG6S4miSOk9+/s1fwzGKaCwtV8k2TPzga4P35Eu6Amz87E2Ni
      Ns5Yxc2fndl++lcu1Xj34xQHz/XRJtc4fzvN4Il+DvoA0+TGZIKRTY2XT7UwN5ViuaJz7miE
      q6Npugdb6LeohDqChB7gk1SvN3j1oyRlQ+QPn+vg/LU4ssXO7z7Vhkc0uHgrwXRO5fThNrRM
      ntFkg759MbyVEqObMoNDrXyr7942mwvT60yVDJ7aF6OUzjNTVjm9r5UzEQfZYoVfzOfRrbbd
      awfYSozVQrNu58TRXjYWpphYWCcYCjA7NkI8r9AorrGwtIHoCpJdnWRyag7RGya7PM7k/AaB
      cIhUtoBXaHB1ZAzd5oFqiuu3blNRLMj1Cl6PlfhmGZ9357mBHntEGCazs2k0jwOXz82pbg+Z
      skpPZCtqLhJyc7jdATYbHk3FGfGAZtDlEZktq4hNC0Odzm0jwuwOG+02nbzDRY/fTodDIy25
      aXMAqsyFxSZnBgJ0hVx0Bu0Ymo5NMqkIdgRFxRAlHFYJv9NyXwOk1Woh7LYiyyqqYaIIFo71
      +Ih5rIiGzuhGjUNdPuY2K3z7RBt9QSslGc4OR+gLSpQUga6gjTqtOHOfVkiYTCUrHOoKMRxy
      0e6zgWEg2O10ui047TYOtXiQm+rXYwpkNEqMTi/SqORZnJrH3r6fYwd6sTmDnD55hFq1SE0V
      eer4IJVqhlzFw5OHYiysbiXGmltNcvaZsxTiK6ymS5x95jjNYgOzUWB+ah7Re29r8m5Fqdb5
      8XiR2cUctzdq93T1WFivMNDhQxVFUHVqisHbH28wl6zx8UKByj2igtR6k7+5sErqfksDE3RM
      isU6788V0TUDURJR7G7OtNkIuW3kSlVuL2Qp7CDqRlV1nFaRimpiqAZzazmm0wpIEs8NBZEV
      HVWDZKrEXAnO9HrY2CyxVBE53bO9xf5Qm49Kpc7762UMfSsniq5vLZR1VeXyRpn97cHdOwXa
      QsBmsyDa3UQDHpo4iHVEWZobp5ztJOhyY5Us2KxWLG43VqsFq9WPoN7i4nUYOn6KXFYhZLfz
      4YcX8bf04VI3ufTRVUypm6NtUd6/tsQrh3f5Y/gcVpeT//63BljbyKEG7fzy8hqXNpoYVit+
      QedYr5usauGQR0QRTaZXKuB08jvn+lB1mQ8mFFwifF5XZHU5+K9e6CGXKfM3V1MU/XWsg17O
      30yRccu0n/LTsLsY9MLtZJ1DfTbencqSr2kcC/mIeq00LBJGrcJiDewP6F4r+SrvzhYwDJNX
      +kJcT21SVEWOSCqjmwZCoczN5Spnn+jk/Y9XKVutFFWd5FwSxWanpMHL++/hkWsYLOWqzBcV
      DnU7uLCUI9nQGOx2M5mtQqXGjXidpdI2O8X/JrOxMM7CRp6eoaOIxTXMUA+9LQ+XPHe3xgPo
      usp0QuFw1858mXZrPEAyVUbyuont0NL7lW2Q8enMCr+ptPcfov2TeOqWI8DDt9s0TUzBgiHs
      rpFDsFg42O3c8QYZpiDtujYAtLSGgJ1v9GEKEob4aO34zFXVahVFub+b8R6gqiqyoxtN3HlG
      6d1Iw95KLvbk467Gl6ZutiP0P1psxmcEwOf7ei0GHxfNZpNaY2nXTYEeFkO04pfWHnc1vjSm
      LhGQ5h7p2m3UoDL/8X/71yScR2mVF/kf/81f8dzLz26fSaC6yX/6xTWODPd9qWDzz7MxN8aN
      8RmMHSTGajQaWwlW2Xks6aPy+NWgW9OwizfjWAMekmsZ/mGqRG+rG4ck0Kg1+dmVDdYbIOdL
      /PRGmkvrdTyNOj+9meb6RoPjvV5kezsOb+nzBTM/leS1DzewBbw4lDo/fWsF0+umxWclF8/x
      128uc308Q1tPkMmRNT5erBNzGbz+YYLOTj/xZIWQ/8HuDKaq8uqbc1yZKNHX4+aNf5jn+nyJ
      3t4QDotJaj3Hq+c3CLf5ya+lee3DBN6Ih2oix08/iOMOeQl7LDTNKE4x++mSScWLXFuo0tfm
      YnY8zj98nCbS6sXnkDCqVf6f1xaYSzS3EwCdudUkyAqmqVKpNhkebOP8m79kcq1IfXOOG5Oz
      GEqD994/jybYmJ4YY3VhBnvLfsKerybULp8uMHzmDDG3RLHWxCKo1BoqzVqFVL6MVi2yvB7H
      7QuRSqyxNjfKUrxBMORAx0qtUgJTI5dKoIp2ksvzNAUHXtdD+pp8jt0gANlkgZHNBr6wk/l1
      mVf6bNwqQl/ASq2hMdgbJJ0scWC4lbN9LioNk6cORjjd4yFXNxhqcVK/lwAANpeDYwNertzO
      kUlWee5b/XT4tza8cPlcnDocpV5p4kclbfPyvZNhxiaz7Ot3s7hUwRV0E/E++BuQK01Koo3f
      eb4TsVwl5/bzu0+34bAAhsFHo3leebaNq7fTpFIK3z3XwuhChfaYizNDHkaXmuzrcN1DAKDS
      MMiX6vS2O/nwZonfOhNgNK4y0Ookv1bANdjOK0dD97MDOPAKVZI1iaDHTiGxSqrUYOzGLZLJ
      JL3Hz5JZm+HMt37Akf4WfK39PHu4g4XEV7fr2t3EWPFN5tdTNMqbxBObXL85h89vY3E5hc8t
      sZkqkC8UCIajdHS2Uc+skqqozC8uko3Ps57XqWxMcHV0mg8uXfvaJ8YyNJWPNhQOR600FQW3
      y0kwaEfZylyF32tjeilHe0cQj2SytFGlt92LIMD0conhvvtMdQUBs9ng799ep63NRSHb4Gdv
      zPDzkexde0M9U4BgkFpDZWUszl/+bJ7Wdg+3pkrYrAaXPlzil6O5B7ZDsAqsTif5y/8yTVKz
      sDa+xn/46SzpugGGgcVtx+OyY5WgxWvyo7fX8PgcBF0iVyZqPHl4O+2dQFuLeysNjykRtiv8
      6EKSgG9rDiO6rNy8MM9f/cPydnYAkUg0xlC7nZvlKO0tdSySBavDTX+vj2CLn5jPSevwMG+/
      8zrlI4dpjYaweySC+le32YTL38azTx3AKZdZ25hioVLHGuyho28fQY8DXyhCOOQmU9x6NU6H
      nUSugDMksrm6QCZboiPWxb7WHpRsg779w0RDX+1+YY8DTTUQDZVLMyVC+9y4iiV+eUsk0h8l
      VZLJrudYUaz01hSUoIXVisHzvVZ0VSWpiLzgvo/GxDBYSzcY6PezlqjR1+elIVnI1zSS+Qbt
      QTs3F+qcOtOBmdOZ7zQRVRXR7eHssIYpCayGPJjKg7sZXTfp7o1Qy5ZJ1Q0GesLki1WqVQXT
      JmKp1Xj/4yZY7GyWVA71+djM1fn5dI72vgiZokLAea+pscHiXJ7J+TyRiINM3cKhHhvJbJNN
      v4iIyIF9YVKZXb5RttJsYnE4EE2TUj5D05Twe7d2i3fYRZpNDZtVRNNB0xTsVpF0pkQ4FiCf
      zmF1efG5bIiSDRGdTCaNYPcQCfq+3omx7iDLKoZkwWjKxKsGvWELF6YrPNXrYiWvINksDLY4
      aSoGXqcFQzeoayYe+5Z+Pes7hb/tc4tg0ySfq5EsKHR1BXCJOksbVVrafGiKRthno1zV8Hqt
      CJikNytUTQu9rS7qdRW320IyXsYV8hBw3l+PbxoG6xtlNJud3qiN9XgZ0+7AWi2Tc/oZDgos
      J5v09fpQq01WM026O30UUmWKDQN/2ENXxE5RP0BQmv50ycTXSuQbOt6Qm5BFZ6Og0tflo15X
      CbolFtfKuIOe3S0Au5XdIgCf55NXudPs2PcUgF3Aw7aj8AUB2Dm7zwqyxyPz0GnhTRNp7fEt
      5L8qBKGOsJZ5pGv3BOAbjtjYaZ7o3YyGkHs0A+6uFgBDk1lfXcMRbKUl5KWYiSNLPqxKEd0R
      JhrY3oVZV+qsrsXxhNuIBj0PnPNXK2VcHt8X9t7anZisJcqsV02O9/sRZJmULNAXuqPeVVU+
      nCvidDloc5gs5GQEu42z3U5Glyv09QSIbjc/N02mVwqkajqBoIvhkIWx9TqH+gN4LFsb4aUy
      Vaw+NyE7zK2WaFrtHIhYuL3R4Eifn1pdIeTZgTLEMLi9XKAoC5wY8LG4VgKXk6MdLkTDYGKl
      QLZuEA676fcKjG7UGe4N4BX0u/sWb4esqGzUdAaCDjbzFWaKMgMtAbruKAA0VWW5ou9id2jT
      ZGnqNg3RTnz+NtmayuLSCjarzOJyFkmvk86XMU0TwzA+89MEFmcnweakUa1g3Nn20Lzz393z
      PvX7ysIs9XqRVL6GaRqfKdPYbcsk06CuglOXubpSZSFRZipeu3u4lCyQFm1EvFZcLiutASuL
      iSo3Z3JYXRYuTeXumy3P77HR6hWYjtf5aDwLpsaFma2pUrOpkIwXGC+aVMpNyrpAKlXgF2N5
      anKTqZUSc9md9cZKQ2E+L9MSsKNrOhabhUw8y1LFAEEg6LUTdcNMosFyqoHfDpcXyiwkK0yu
      V+/3gFjM1ZnMbOVtGtks0+p14P4kyN40ubmU5u14eTePABoV08Xxvm6KHp31mWmWV+MYVoPl
      9QJurwPB4yU1f4ucbKe7xcH10Rl87YN899mTRMIhRqfn6Ro8zM2bNzlzdD8j0yms9STVpoYU
      7MJdj5NXDVzBXlyA2siTLTqZvfYeGyWNp588zLVr4wwcPcOp4UffiO0rR5DwChrvr9Z56YkQ
      Q34nxYVfJekqNU3W1nL4hBAvDQVQ602OD4ZwlUucn8lTaMD3T21XtkB71ENqosqLx8JMzlZ4
      Yp+Pt6a2BMDptHOix8OHKvj8Tvp1g4mmg/6QwHsLJXpbJGrFEjdsEqfa72+9V3WDRKKMYkj8
      bkuUQjrFWsPC0+6tbSo7oh6SmxVeONpGWNC4tVBgqM3DYNhKtna/tYvAwTY/WWXLFtGsN7m8
      Bi8O2QnZJYrlKrrbR4co7+IRAAm7ViNfV8htZon0D3H4yBHOnDzOkSOn6G3dytQmCw6effo0
      zUKB3oPH6W+PAGDzRDj33NOU4qsopoGiNJEVDbsvytmnn0TS6jj9LZw9+xQon+pN1Col08Pp
      Y4dxeYMcPTSIUsrvrsRYmo4t7OdPT4WYSda+cNgZ9fGvvtWDXKhQVgzmsiqDMQcD/VH+xQsd
      dEfs3M8WrssyWcFOi01CbcgUagrKPVwza8U6EwWDZw+G2dcb4p+eitLlNLC3BMnm7tdDbyFZ
      Jf74pX0cd8pcT6mcONbJ8bDJcmHLhqA3mxQkJ1GryehCgbbOIIPhh7Xi6zy1v5M/3O/lVqoO
      wEy6zM21DO8s5HbxCCCI7DswxNjYNTytA7QF7Nj1KGAjGvVhdQlErSZtTp0rH9/k8NGjlMcm
      UZ1bvs5ao8jo2Bqd+w/jNwuMjC/T1tlPZX2Sy9eKHDh2nPjtK1y5WuToidPo1SxOl4NYmwO/
      pclypkS0LUqlXCLYto9fX8LuHSDAzFyKhbLJd0+38OaVDRYrOrpFolps8K0hL69eXKd3IIpX
      Muhs8eKRBHL5Gq+PF/nWmfb7Fl+TDY72eBEEkf+fvfcKkuu88jx/16R3lVneWwAFFDzhSIIg
      JYrNllo9Lap7usf0dHTPxsbM0z7uvm/EbkzE7sM+bMTuTsz0zo6mrdSSKLFF0cN7oFAo77Oq
      MrPS+8x78+Y1+1CQSDZRqCJACgmRP7wAgcx7v+/md+5nzjn/c3qPl1+MZ3ntVBfTsRL9XpEf
      38xRlEp4h3wsLOaZXS/wh2e6qekie4daSNyJ0T7YtmM3ZFlkfCJG1eXhWz6TX1xbxxbwcbZe
      4oM1J88F4NiAD7DI5RRurpXoH2jBW85zP1GnhMR3xh5W2dTk4swmUwWNimBjUND4IFPn2/vb
      mE6XObOnmzPDJgt59avnByiVSvh8Ww+1Uqrg8nkfSxirEf0ApqlTVASaPLsz10ZNiClW67gd
      MvIOVSZ/xReWEPNVYGvwAwh4fN7Hvo7pdWA4Gy8fwAe7jnWy7LaGLJDhd//m6hZ85Qzgi8Js
      cmKKj29AjYClOyDxtFvxdGngTfDXfM2XT8POAFvCWB8xvVhg7OSphwpjLc7NMTQ6uv0Gta5w
      Zy7Mc4d+C0qjfgqLSxeWmU8afOObfSzdXGclo3L8pT2c7ncTno3x3v08Dp+box0SN5fLhDqD
      vDRg56+vp/iL74zgf0TCebFQ4d0rMfaeG2GfkuM/XM2yt93PG6facAom71xdZ75g8I2TvcxM
      hMkZdl45HOT920n6R9oYkut0DjTvKIxlKCr/53treDxu/ujlXsxMlv/1SoH//fuDgMWdyTh3
      Nqt0dARwlKssZhSEUBNHnBpTyRqDezt4ffghs7BlcnEuzkxBY7S3Bb9WYaoq8GdjWxvzVK7I
      W4s5dMnWuAYgSjaOnXkBU4pydF83yzP3iOVrjB0YZXnmPqKvE6sQ4dJHcXpHD6NuzpLOq/SO
      PYcamSZZMjl49DCmZZHeWGBqKUZb/yghMcfcWhx/ywBNThjob2EtpjLY1/q0u7x76irhlEl/
      t4+Q286xQy0oUzl8zq1BbQgi7e1uRMlGoaLR1uphKVrgey/u5aX9+o7Tvj/g4bWDQdaAVL5O
      V7OTw4N+HCJYSg1ag/y7ow6uRkqodRjp99PnFXH7nGhlhYxLRI1XCe5QJlXRDJx2mbHhIH6r
      zjubBs/3fpzbe/xgB51tJdarAmcOtzCyksIIBelEJV3PE3JsY8SCyOGuAAWziN8hcbyrlfL6
      x4k/rUEP+4MqSVN8NpZAplJgajFMXa0QWV4jOHSAY2NDeJraOXPqOHqtAnY/Z0+OodYylPVW
      zh7vJxzZKhgRjuc4e+4sajZCoqhx9qVjmFUdBwqT9xbxtD6+SvRTQQC3z8WeDpkL9zK4Ax4O
      9LlJ5bY8sIVyneHBEKJe5+DxHk6Mhmj17nwy9DBhrNbeEL87GmR1NUVStUAAXTcxTAtBEPnd
      0z302nUuxuGNYy30Bp0UlDrlTIGdHMIuj5PvnuhEzGT5qxtxbi7neP8TBTIi0TzRusTJAR+W
      ZbBYgJEmCdlp51CPh1xRe7hH27KwO+0caHGTqX421skwBYbafLgwGncG2ELC63UhOv30tTdT
      rEu093USXpgmn+qi1edDlmTcTgem4EOS7bgdTnThPpduW4wdP04mbRHyC1y6eImWnr14ajEu
      XbqJZevjaHsr05Ewh5wNdcq/M7KTvW0WH9xNc/xYFx9cXCNVMTjxfBPXJhL0hZy8cyuCJ+RD
      yRR5+1qc4UM9RJfjvHclxvh8hX/5/cHPXPaTwlh/cztF2VdF2uvn9mIOh9+Ns1YlLDppqWX4
      /64X+M7JTu7NJwkXDF450YQs6ASbXAhKhYWyyKkdRldNrXFxMkkViT98qZcmGS7OZhiUNW5E
      dKJzWRKGQKoU4oUg9A8FETG5Mp5guaRzYN82vgbT4NJykvWywaH+Zj6ciXI1oVITbXS5IGDp
      vBMu4HI5v3p+gNjKNIuRLCNjR9HTa9haB+gKfb7TnEYtkGEYGuGYznDv7nROG7VARjJTwe51
      0bSTtNwDnsQP8CkD0DQNw3jWM2a/fDRNo7zyn3GJ8afdlCeiaAwTWr/9tJvxxOTYT2B14rG+
      +6lJStd1dL2hol4aEl3XMXCgW41eTvXRGDhQB3qedjOeGN0MoQ0M7fzBh/ApA3C7PzF1Wgal
      YhWP37d9jLxloNYMnM4vLhH+WUBVVXQhg0eMPe2mPBGaFXjm+wBP1o9t6wOo8Xv8z//bf6Hv
      2Au0POTMOBNdIFsu8fO373H00ONZ306Ep29zd2ZhV8JY+XwOUbAwkZC+5KyWp14n2DK4fDHM
      e3eS+Ft8rM9G+MX1ND19ATx2EUNV+PEvllnNWwQslX/4YJ0qNgJijb97e4WiYKe/1flQPR1M
      k4/OL/HezTgzcQ1ntcTPLsbA7aKzyU6tqvDLd1e4uVxiaDCIns/zgwspep06PzwfpbMrwPpG
      kdbQzlKFZq3G3/xsnluzRQZHQkjVEv/p3U1O7GsCw+C9j5b54OYmC2kdT63ET85H8bX6SSxv
      8rOLUQSfh86A7eH9+OR9DIN3313k2qrK2KAPURBYmInx5oXI9gYwfv4ifUdHiSXqlKc+4KP7
      s0wvZ8hOXuDKYgpnPY7qaCMezX1pBpDP5Nn33HO0eUSS+Qp2ahQrNUr5LGvxNLVskqn5Zfwt
      HeTTm8zfu8r0UoGWVhd1HOSzaQSzTmxtmZroYnnqLhXBQ8j3ZDE8T90AEGjt8NPuMIhUNTIZ
      ie8cdzOesBhsdXD/9ia9x3o5Mejl9t0E5745yNxcCj2vcuTcEOH5FHsGAg8fOILA4GAzo60C
      istHMlLi1XNdLIRLjPR4sSyB3v4Q7koJLehnajyOIghYis7IkJfl5RLNXT6CbmnHHGW1VKNq
      t/P7L/XglCwu3UigAEeGm0AUGR5qZk8I6m4Pm5Eav3eunXvLJfYPBzk67GEuqjHc6drRALRU
      mjV7C4fEKrkmP812Adlh5/je7QIhzRq35xaJLK0yO3mPSrnGmd/5A2q5VaqKxrlXv4ldr6Dq
      X+4BUrWQ4Nrly2zEUqzHM9QqaRLJNJNzMUYG24hn6xzc10c6mSOTzTG81syyXAAAIABJREFU
      /xBnXjiBmdskU9FZ39ggl1ilJDSjJ6YJJytM35985oWxEATykQxXlqo0e0XsTgdurw1N3Qra
      L9Xq3LiwzH/82TKHjrTyzjvLTKyXMZDwOSVcovDoQtmWybVFlTPDblr9Ij/9YB27ZysOX5YE
      VpaTGG1tWOEoOdFONlFh394gs0slAm6T9z9Y5ue3th+Qv0JySiSWU/znv5vh6nichCGRT1XI
      VY1ft+P6co3TQw5khw2nU8YyLMxajevzCmcPP9p/Y9Z13np7jrloFbffScgnUFQfjNm6xrWp
      0sMNwKxVGDv3B/zpn/0FLx/uRlXLvP/zNxk+9AI9Q3vx2UX8bf00+7wMDnTs2NHHxR3o4IVz
      5+jraKKSCDM+OY8OdPX1Y5cEPD4fss2G/KAXglFnanwSTZJYmrzDWjyH6PDS29mC0xPA63HS
      19v9pbX3N0ZN436kgmzUieZFlEyc//aLGN0dDlYiJUYHA4gOG26HSLVSR5YFRodCtIcEfvjm
      AklD3F7nFSimirhb/MiYpPIaHqdEulBjKVoksZHmg9tZ5hcSaB4fnR4BRTWwXC4O93vp6vBu
      FTV5ZNLlFrqmIzkcuGwCrqCH3oCMohrUFZXlRI18PE+gowlRsGGrFfnrt1Zx+x389BdLJNIl
      7q2UHnkX0Sbz3W+PMra/jeUr8/z9fYUhl0EkVeXn7yywmdmlMNbGzCTekUMEf8N7XdMwECQJ
      wbLQtBomAjZZBgQkScAwLEQRLGtL418SBdRaHYfDRq2mIUoyNllEEETAoqbWQJJx2G1PLIz1
      VP0AloWi6miGhddtwzIMlLqFy2Zya7rMmSMhlGodZAmHBGXFwOO2IQlQqdaxu2zYJWFbPR3T
      MLEEAUkU0OsGFdXA7bZhmiayAOWqjiUIeD02ZAHqhoVNFtF1E0kWUKt1JLttx0LXlmVRrdax
      RBHPg3pi9bpJMpKh5m+iv0mCB+0wDYOyYuLxyNSqdTTDwuaQcTukhwhjffY+tZqOIYi4bSJ1
      00LXdDTd+uo5wr4InroBfEE8iaBUI/G1MNZTQIqXkNWdBWAbGdFTRa48232AJ+vH1wbwmAi6
      iVB/xktKGb8FfYAn6kfD1gkGyG0uc/3WBNFkgY6uDqZvnqdgOVibvEvZlLEQcDsfrhKQ2ljg
      9vgkmYpJR1twxzX/8vwMTreDQsXA7Xx0Sl4j1AewLJO/eWcBZ2uQm3fW+GA2hzfkpcUlUc/m
      +A/vbxIvGfT74QfnN4iqAu5ahb+/kWChYHCo071tneBPEovl+LtrmyxmdPZ1eZAwuXwnynvz
      ebrbXHx0I8L5+QJBr8gPL0XRnA6UbBlHwIV9Fxutar7E/3EhwZF2Gz+6vMHN9TKDXX5cEtyd
      jPPziRRVyUZyPcU/TqTRbHZqqQI/vJPE5ffQ5pEe0g+T6/c2+cVEiroscmsizoeTCVbrNg62
      OVGKFX5wYYPFvNXAM4BlsBEv8+Irr5CPzjM/NcPcapx+SWQ1kuNYh0Hd0ElHlphZzXDw0AhL
      M7OE+kYZ7m4hn8/R1jtCf0870UiE3s4WNhJlBDXNejRFz77DSMUoq5tpBvYfR6lWMAwNTReJ
      Lk2zlqtzZGyI6fEJvJ0jHBjqfNpP5BNYLC+m8LX7UAyoiRLfOdFGV9PWz5lI1jh9pI3nWl3M
      zW5y+GA7AwEHIYfA79hs3I48qhDwp+lo9/OaIHE/qmBYYJQVNgUbrx32E5IMNKeL060C2XSF
      9t4A+UwJweMgqOh4PI8ulG2ZBjfXqrQHJDxeF68da2d8JU/VgKBlka1ZvDTWQqxYQ1EFXhoN
      EVfrTCQVXj/aTmvTdsNX4LmDHezprTBXhDfO9TO/msEe2gpdmdms8p0XBoitpxo5H8DCQkAU
      BERZwtfcw+EjRzh94hhHjpykt8lGvlQhHMvwwvMnSM7dJ6NorIbDAIwcOI7bLDE5NU80kQBT
      I57OUazUOXnmFMnIKhXF5MTzZ4ivLQGg14rkUnFuTa5QziZJJJJU6mCZ+q4rFv4m0KoKP5kt
      kowVmI9XGWpxMrWY5EJ4S/emqcuPmSnzj3fjpGqQTpX58fVNaqZFJKPgkoUdfSFaqcJ/ubBB
      sW4RSanY7CKmBYYBqlJjYinLldUKTgyiBQ1bSxNDdguPy04ikefCRIrKDg9tYz3NnZjC4lqB
      9ZJOKlvFlGQE0wILnDaBtWQV3QSnXSCcVtAtC71mMB/J88v7uW2OQQVSqSKzeYtTAz5M02C9
      aNH3wGAsQBYFJLGRc4IFifYmifMffsjkYoa2Nh+iuNVcURRAEBFFEY+sc/nyTWyhIBgQbNoq
      gBFbnWU1msCwRDyCyoUrNygqdbRSmiuXLiN7m1EKCa5euoQ90IYkbXkuJYeXFr8Th8uL0+VG
      RiOVzDSUAcgOB3/6UjcHenx0N0lE4irrOQ2fU2RyvUimqLKRrqIjcHzYx3qyiilLLK9mmI5W
      2CjuHPBo93n485d7SUazzMTLxPIaxWyRgt1BqwixgkbAbSNTUNnIqhiWQG+Lg9agC6dgUtbZ
      UUupvSPEH59sY6TTC5UKN1bLrKYV6orKZLKGotRZS1epGiZKVWM9VUUxBPa0O1lLqbg92yxV
      zTo/ux7n/lKayyslUtE87f1BJGA6VmKk2c6PLq4wkRW+eseg4fAaAwP9gEUkvE7HQP/nXgc2
      qi6QYWhMbmgcHdhdfkOj6gLF4gUEn5fO34C+UePuAb4ktgY/gEDPwGcT7Z9lJMnO0YFnPzK3
      q+Nham9fDl85A/ia3z6ssokx/3j1ARp3D/A1X7NbnmAR37AGYBp1xq9/xPvvf8D43NpDP5NJ
      pR69OTXqxBKPVzqnobFMbk/G+MsLERJVg9nFJP/1UozMg2hQo67xk0tr3I4qKFWFv/0ozNW1
      CjVV472pFMoOUbzVssLfnw8zHlcBi5nFBHO5rY2zaRhcuB3h3fkiSlXlRxfC/HwyS6FQ4W+v
      xCjULVaTn1Wsfmg3LIup+QQ/uBynquucvxPhh3dS1Mxftc9iZi7OQsGgUqryVx+tMZOuYVkW
      d2YSrJd2l71oWSbXFjb5u5n0r69drSr81d1I4xrAli7QSYKBHo6O9lHKJlhZi2JYFqnYGuub
      aeKxNVaWlimpdQrZJMtLy5TVOsVMnOVwFN2oE02kMLQKS4tLFBWNulpmeXGJVL5EqVwBTMrl
      6tPu7udmaLCV74y4mYoVmE4Y/P5eJ+MxBYB7cxmOHOkiHctxazrLiVM9xOMFFNXAFASMRxmA
      ZXFtJstLp3sZa7GjFKtMxKvEHxhAIlXE1hwkVC2yXpf49pkefLUK78yWODboYmI+S8Xa3ea1
      VKiwqtr4l6fbMDWDfXvaGPPprJW22lcpVAknSiwUdD6czPJ7L/YyErRRKZS5HVUolncX2K5p
      CknTxWmPzlRl69pX1wt8+0Bb4xrAJ7G0Muc//JCrlz5kfHyacKaKQxZRFQURg/VonIX5OWSz
      Qji+ydR0GEmJM7ex5amdmZzE5pCZnZ5jfnYG2WWxNB9lc3WJXHyN6C6OBRsKQUTJFvnZTJHu
      Jg8+QeVv7uZoe1CdvSLJ9HhkQj6JlpCTd6+sUxFkAgEnLc4dfnLLIllUefvKGm/N5LizVuH5
      ET/W1tE8mmnS4nfQ32qnrAtcH48Q1Wy8NOLl9nIZQTS5MRHj3cXijt1QFJXl9Tx/+WGYtGWj
      mq9Qkj0M+kUs0+TeRoWTw34sy6CQ1/jR+TDvLRa4uVrl7IjvQZWfnR+XLNuplfK8HavR6dhy
      zQl2maCzgZXhPoVlEuoa4khvN3ZTI1JUMU0Lb6CFnq5Owqk83qZW+rtCzOZ0wMK0rF97IQUB
      DHNreWBaFpapY5giHR1Broyv8eq3Bp5Wzx6Puk7SkDjZ52IpnqdkOHh+UGQtU6PHBR2yxfmF
      LMW8SdBR48SeEPc3ypRKKsvxCgg2Dg/5Hn5tUWCkw4PpdrIar5CxdO4slam6mtnfHsLnsDG+
      msGqaowdqCG2N6Gky6g2Fy8P62imxWbIi17bufie1+9hT5dByFZnaTVHqlLnYJeHWk0nr5lk
      8hX+YaFELADf6HIR8DtYT6oU1BrXF8oEu9o52Llz6qWuKOhuHydsCguFOm6fiNvQubqea3Q/
      gEG5VMPjc1HKJkkXVDp7uqmkN1EFNyG/C6fDQa2uY5kGbodMVRcwKlnSZYPe7nYUtYbbBmsb
      CVq7usmsjHNjaoWBsbP0OLLE600c39/P56kw+tT9AJbJaqxEUoWDfT4qhQrhgsmBHheXZ4v8
      zpEQs6sFmtt8tDpgIlwk1OIlgMZMXEWWbRzbE6C4zfl5XasztV6ipytAq1tCr+uUDRGlptHp
      dxCOFTGcLnq9MLVewulzM9ruolSt4/PIhDeK+Jq9tD5Cf3SrHxbxVJnNmsC+ZhuT6yV0UaJF
      Nii5fZzocGBqdfKWhA+diY0KQz1+Qk4JVa1jiBIeu7ijLpBlWaynS2QMicOtTrI1k2a7wESi
      wSvFfxno9Rpa3cThdGDqdUTZ/rmT6J+6AWyDZVkYJrsuLNGojjDDMBFFYdd1j7+wAhmFQoFa
      rfZYF3rWKJcfP6Fd13XU4H7UQPsX2KLfPBXptyA9FKg6+7F2U5b1IXzKAAKB35wH7llGVVUK
      ydgznxFm6XZaoo03A3xeLJ+DptDjzcbbHAnofPijv+R+pIyW2+A//eAnPI15oZxPsba2Rq6k
      PIW7NziWRSJRolq3yCSLzK2XMB6ccWdSJe5Op7i/nKdumKyv5ViJK9RrGjPzGfLKo48PVVVj
      Mpwnp5qYus7sWoFk5RMnZaZBOKUAFqlMhdnNKppWZzZapm5CcdfV5y2yuSqTG2V0yyISLzGX
      UPiVG6BcVrm/XkIztz53L1ykpJkUiwpTkTKauf3qXVM1oqmtcVPKVZhcyv9axcSyLJKJEpX6
      tgZgkCwWWJqYYnVlnXQyTrWS5aN3f8HE4gZLCwtomsZyeP1JnHA7srm6imKauzrqisWiZJMb
      FCrP2JHmY2JUK/zdz+ZZSpa5cCdHei3D/c2t15RlWpiGzu37KWJLca6tKig1g4nxTXJqnQu3
      HqVparEaLVHRDM7PpLk2mWCzaqDqH7sc55fT/NXdJNVciXcXitQ0g/GlHGupEjPrRabju8s3
      UCsq705nqWkGxYpKOFtjdT3NaskEw+DSXJZqVeXSYoFUoYZSVfhoMcPFqSzFfJmb69v5b0yW
      VvLcnEkBdT68skk5U+DK3NbRbClbYmEmynz+EbFAgr0Vm5EiUfLQ1uRBKeWIJ9J8dOtNXj3e
      RrpaJJuTGBr48gpI12tlomtVXJJMOKqzt80imoNYeJ1gXxel8Do1wWBw7AzFzShKLkpO7+Dw
      fh+mby+ZtWk6gjJzS1kGhruYujeFrbmP3z333BOpQjx1LJMr4zm+8Xw7liSjFcssl3Rskp9j
      3U5a2v1IGBgOD+GNJPWKTjhlZ0CGO/M5chX43XPbr//3DQSZXcvh7nAxN1WhItVpanLRG4Ba
      RSGm29nfbLCWUdFKKvNJicMhkbvRCoJk23KeuW0caX/0EWWhXCWdr6OLVfb1+znaB7eWLdrc
      Aggg1OtMbmjoThvHR718NF/h1OF2oukyswkTMy/x4sDD9FlFDhxoI3M3BsgEnAYTqzXOvLhV
      BMXf7OfYcJl5dgiFGPCqLFV9eGSBxOoCmruVkNfOc2fPcPHnHzB24tCXOpDcgU7OvvIK/W1e
      dMNAqZTRTYuW3n0c3dtDS+8eXjjzHLKhYSIwuPcAJ08fw2lZGIZOuaJgYePIqeeRK0lcrX10
      N/ufeWGsWrHMvaUMb32wzu2FMt97Y5RvHmqhp+3j9NC5lRL7h320+u2cOjdMPVWg/3AP//Z7
      w/R3uR5ZKHshnMUe9HGoy0Mw6OT7L3axHC5gAuFonrtLWd6bSJFSYPRAO/v8JpbPz78+2UaP
      08DWGiSe3PmQwWG3cWBPM9/ogqtLJW5GVF463IJPFkAU+OaJHv7V6RY6PHZwe/izF9pZ3lT4
      nRf6eeNgiK4Wx87jT6+RsTz8m9e6WIl8NkRjmxnAznffeAOHTWTQkBDNA9jtMj35EnbHSyRW
      x+k6eII+35frRws0N2810O7Dry+ykpIY6G9CEJ2ATHOzH5vdjt9vIYudBLx2xicmGTs2SHzi
      Lu6mNnxNIWwOGf/QQeL3JjCE0LPh/n4EjoCf/+HPj5JNFtDcPu7eWCFmuPnOCw7evrTB62c7
      CLUH8csCe4+088uPVnF3tqCmC/zoeoqzL322OMavsSCRqTK7VGS2O8i5ER9vXd/k8IEO5mIl
      xvZ2MroXpqNFDnR6uDIRZ8ly8N0RG6m0xp6hFmK3d1coOxDw4o8muJAXeWUQ/vFOloVYiW8O
      eYgILjq1Mjc26/zBmQ6WF5KMJzTOHe1kbinBVA6+e2K7UziDix+sMhGrUhYd7G+DH15K841z
      /cyE87TJBm9eSqO6la+eH+CLoFF1gUyzTr4kEArs7sXUqAUy8hUNj9OGbbeFsruep8m39Fj3
      ejZCIRoQsaIhGI11OiUBzQD53Z3CCNJuT2t+szR5PueZflWH7O4iUP8pXxvAYyLmFGSl/LSb
      8UQIvt8Sp2e+jjj/eBI1z/py+Gu+5olo4BnAIhme4/7yJrLdw+nnTzFz/T18/WNkl+ZoHthL
      oClAW9D/0G/HlqeY30jjbe7huUMjO1r63NQ9egcHqdRk2kKNX/rIMg3+45tzvPTyCLP3YmR1
      gVfP9DDkl5lbTnJ+qUSiYvHHx4NcWiggel38s2E3fztV4C9e7MG3bVi0xb2ZBLciVdo6m+gV
      atyOVunsa+b39zeRThb40XiGTE7h1dNdTC/mcHndHG6TuLBc5ndOdJHOKjy/p2nHPhhanR9f
      jVDGwR+cCnFzIoqrp4+Xe21gWYxPb3J1vcqRsW6a1CKXw1WeP9pJKZJiKqmxZ7SDVwcf9luZ
      XJlPMJ2vsbe3BbFQZK5QY3Sgg3MdW7Uh1qNJfpiwGlgZzjJYCic49fwZ/HaFtdVNFlfWcDh0
      whtF2ttbkR02SvEVxqdW8Hgk7o9PUNJttDT5yCYiGLYAe/cMEttYI+RzsLyRphBfYWZ6DlXy
      UIwuMDk7T132o5XS+Js8VGoSuY05ppYiBHw27ty8Q1G30Rb6OHz46SvDWUzPJrEHXbjcNmKp
      OsMtIksViQOtDlpCHsY6XdhcTo4P+LHqOroo89xwEJtl0uJ3YpeFbZXh2lu89IccVOsWp0Zb
      6A/YUAyB3qADt8fJiWE/VUOkx2mhCDKmXiOnCgS9EuWyjk0WcLjteG2Pfu1kskWWsjDa72Ow
      xcPeZon1srylCm0ZTCbq/MkLXcysp4kn6wz1+Bhs89AXslOpGXi9LnoCNqp04Mp8+kCit9lL
      h1NCEyTO9AdpdwjUJRtdbhldq3EjVcfvaPBC2QLW1h/Twt/e/wlhrBP0hRwUKwrxXJWzZ0+R
      WpylUKuTSm2lQPbvO8JgZ4DF2TmSuRyWpZPNl1EMmTNnX6ScjqJbDk6fPUsxuQ6AoVUoZuKM
      z69TqxQpVBQM06SmKA2lC1QrVfibu2muTya5Ganz+tEgTQ4J2yfkyBfWi4z0+EAQaA44MfXd
      ez+SiSLzeYPTwwFi8QIrFYGTAx+/ADbWcvT0NjHcF+RQtxuPJHB4Xwv72j20OnSiFYO7K7t7
      OXjcNoxigZvxz27ILXMrCUcAZFmiySVyfiqLIEt0BB1UFX3bSIRwIk/SsnGs1cVSPEdWdHC0
      ecv78dFcjIl4gfeWMg28BBJkutvcXPzwI2yuAKfP7CWmOAARh0NGlEQcdhO7Q+DSxRsMDXQg
      LMTxeLYK/cVWZliMZHAHu2mWaly8chPR34etkuTSxQRtgweoRqa5cmGTzqEj2JQ4kmTD6QvQ
      E/JQxYksyciSgF6vf6khH58Xh8/L//KnB9mIZFB8Pu7PR5jNwx+ddXJzKceJYR8l7Bxxi8wv
      J7mwXEbyeVjfyPD23RR3wyr/+tWuh1/csrgylSJuiGSqderRHAlEkkqIoYDEWKeHqCryXL+M
      Ula4NJ1C9vsYDNpYKZgM9IeYvBoj2N+8Yz9CTV5YiDKVh1c6NX5wcZMlxUGnvZkCdnqcdf6f
      d1Y4daQXr6fA5YUcA4MhLt1NEK7o7BnZvlD2xeUcqixS1IKsLGepO2Ty9VZabBavHR7kNcPg
      w0jpq+cHiEZjdHd3ARbx6CYt3V2/RcJYdZYSOvu6dlcDrVHzAeKpMjafm+ad0jcf8IXlA3wV
      2Br8AAId3du8BZ9RJMnGvq5HK1v/Uwy18d5/rb6tje1u22bZwHzMenVfOQP4mk9gQu78s+8L
      UMYMxI3HM4CG3gR/zdd82TTsDGAadSZuXWIzq9E5tJ9jo5/V8YxvbtLW2bm9FRsaq7E0g72/
      XUsdgKv3ItxP1Dl7vAs1nmEybfDayU56vL/yA5TRJZk/PBbi/P00nrYAZztk3rqXpru/hVdH
      tlGFeIDt8GsQv4YVHMPeGaI+f5P6ZgZEO/ajLyLZKijjS7jPvgDVHLX1OI6hAdQ7lxBbOtE3
      Hi5m9umb+HCeeAHBLKDeuo7laMd9fIjqlWuAgG30FLaOFupz1zDMEM4De9CmryO0H8TW4kWb
      uoqeLjzkwhK2Q89jC3nRpq4htIxi6wyhTV5BzxTBGcR18nnM5HzjzgBbwlinaG8d5OhoH5no
      Cnfvz1M3TdYWJple3CC1Gebu7TtkyjVSsVXu3L5DtlIjHVnmzv05NF0nncujK3lu37xNuqhQ
      K2e5ffMW6/EM2VwOMMhlH/YQGxmLCjb+/euDHGyVWCsKfO+Al8X0lj7m6HAb//03etjf6cHt
      sPHPzvYiqjXCG0VeON1LIfvoEA6hqQ8x2IzstWGsTaDcn0Xu7AVAbB1GKIdRbt9BCLRiLF2n
      ev0KUlsXWjiBbfQoKLs7AhUD3Vj5ReqqF8kt4hjbjyB97NjSwxMo9yaRe0ewj/ShXH4XPVNA
      X7qNOreO3N667fPRF2+jLqwhd3RixOdRJuaQWkIAyAP70KYuYXl7G9cAPomlFrh26x6xtRkm
      bk+Sl5oY6m5FNwSGBnpIJBKsRxLs6W0mltpkca3IcLPFzOpW4bT7k7Ps2b+HlblZZueX2TPW
      T3w9TS62wWZ4iazxrCkqW8hajf/77WWurCn4RI0f3s/R5PpYhmR9s0h3RwCvQ2J8PsPB4Waa
      g07OX9ugJsrb+zUECcfYGEY6jeD1grsN1+EDGJmtZyk4/dhGjuD51veQ7BWkwTN4XvsuRmQZ
      W28bli7jOPktnIdGd+6FmkfqOIi91YnQcQhBS4PDiyDLgAWudlxHD2KkikjBNlznvovryBiC
      rwvn6ABGYTvxLRMh0Idz3wBGLoslB7D3+NGWtmYlQTAxVQVL0Z4NA0CUaQo109u/l67OAJX0
      JuubaVzeAF63G1kWcPsC+D0uJMmBpRVY3kjjdm0NbLdDZHlpGVN2IqOzuryKqlt0dDZzbyFJ
      X/PO4koNhWEiOx10Ndmp1TXSVYEun0yiWGcjrWBaBosZkz3NMjNTm8wWdGaiJdJ5leagi0pZ
      e0RSkIWRTiGFWhCb2rB1dmAUSkhtbUgt7ZjZNYxCCbOiIjrcmKUMlmZiKUm0zRRGKomlFEDc
      xWmUOwh6EUu3IwplLMuJ2BRE8DYhhYLYujox8gWkNj/1WAIznwU8yN2tmEUFuWWbGUB2IbeF
      MMsqUks37udfAMGB1BxEamnHKFVxHj+HrdnR6H4AE61mYHPIaEqFqqrj9fupV0vogg2Xw4Ys
      SeimCZaFTRKpm2DWFaqaRcDnoa4b2CQoFMq4fX42F+5wbzHCwIHnadJjFO1dHBrufLaEsbCo
      VDTymkVbwIGmauRVi2afyPWFCi8faELVLFwOEaWqkaroIEt0+2WSeQ23x07AKZH2HId/uPrw
      W4g2BNEAuw/BIWOWcgiyA0tVEDwBBNHALCuI/iaoVzGrCtgcUK8h+IKgFLF29D4LCP4ggqVh
      lraWZYLdgdi+F6EaxlBEBIcNs5gFZES/D6uUB6cPwSZiFvNgmFTGTuKZvvXp63oDW58pFBD9
      TQiiiKkUwRKxVBUxEMJSio1uAI3J0zeAL4ZHGsAzxGcNYPd8ZYWxngRd11Fbx1CsRqoc+fmp
      0oXr9Wf//We6eqn7Hi87/WthrMdgSxgr0nApkZ8bXaZNGH/arXhiUqpFKHH7sb77yE3wL99/
      97Eu+kWR2Vzl7t27RFM7S21/pajX+fDyGm++v8pUpEqlUOadixukqw/W3KrKWx+u8tHdNLWa
      xvlLayzEVdRylXfeX+X8/eznuJnFzFKKy8vFrY2zZTG/muHteylKdYu1SJaP5vPUTYu7s0ki
      JR21UqO4i9AEyzS5v5DiykoJy7KIbBbY/Ce1VaOxPJtVk3yuzNvjSbKquVWm9SEKD/+UcLJA
      RrNQ1BpT6U9rCNU1jfvJ6qMdYbHNTdbCSzS397AeieKqFlnJxHCE9jHaYnDp5jwnXv4mvc27
      q0r4eSmki/QMD+N3OtF1A0kEwwJME920ELGo6zpOl5toZB3JrIKrm/YWN4IgYZkGoiCg63UE
      2YZeUxFtDhy2hvX/7Q5J4vCBNuKRLGVF5917cZ470Y3zQTh0bj2No6eVw+12pm9FaRpsYeL+
      Js5hJ57OZvb37v7Ua3Mty4pu42TnAyEVy8ThcTKEys2ZODnDzpivzvhigohmJxEuErJbHN8T
      2vHamVyJSFWi1cwxkbIjVyqkay46H+QE1xWVm1NxbKNOrI0CB4e8XF3MM+wX2MgZHOnZPnFJ
      U6qcX06xd5+HYK3KRtXiYIv7QR8sbq2kmDLsj54BLNNkbXWJSrXG9MIiK+P3GXjuJOH70/z9
      D/+WSinJ9YnHy8bfDWolw8T4OIlEnPGFNcrZMEvLYS6cv0J4M8KNi1e5N36b1VieVDLOZiTM
      4sIK8fVZ1nMa4xMTbIanuHp9nPWVWX7205/x1gfXGyq2/7EQRZq+LqAMAAAZIklEQVSDTnIl
      nUNDMqlNjQ+ubLCW2XKEVesCs3fXuDGfp6PTxdWr6+iyHUOtc/NehFtLuxcGDhdrZCI5Ploo
      oBkWiBKSqvLRYpGeriakcolry3mWVQk1XUDR6uRKKm/eTVHb4UF7XQ6yqSx30hZ9IQcHuzwf
      D0jLYiJc5PS+ICDS6jb5xUSGJr+D/f0B/I9KtrFMbsaqnBvYWtLv7wjg+USuRLpQwuYP0GYX
      Hm4AulLgnTf/GsnXj8dSePuX75Aq1kCQcThsSILIYE8Put3PYNfOcd+Py8fCWD5Mw6BcKGAA
      7QP7GR3ooKVniGNHxrBZOggi3b2D7B/bh10AU69TKlVBdnLk+Akcepm+gyd5bnTg2TcAoJ7P
      ozeF8EgOOgZ8/PG3OlhYLmNZFlKzn//ujX2Y+QK3Fit8//f2YSoKrlAT/+6f7yMXzbFbPYg2
      t43DhzrpdtRJV02MuoEz6ONPjjezkKjy+uleXhjyM9Ds5U9e6qE/5MQURQZdxo7iFIV8hc6h
      Tr7VIzKXM35dhcayLAzdYC5S4Ke3EtyYS7GmyPz5S51sJCsPPmdtVYh5yHU1rc5iushPppPc
      ipa2Vg0WDyrKWKxmytwKJ3lvKdPYx6ClXA5XMIhsmazMTpA37Az29oBoJ+i3kcsp+Dw2FM1C
      VUoE3DbGJ5Y5cGwPc/dm8LT10N/uR3b4kKkxOX4XMdDLoX19T6Ro1wi6QPFIiaYeH04gu5nj
      7bs5Xn+5m6u3Erx+qoWfvr/ByOEeDreL/PT9NfrHehhrhrfORzhwsp9D3a7d6QJZJpfGY2g+
      Py+0S8QtO/FwioWixXdPdbAwGyctufn2wSCaoqJiR83lmS5LvLov8MglhmUYXLi3SV528+qQ
      k5/eiFNF4lSfi6zdx6sDLkxFYV134KwU+eVciddOdLGyEGUmrdPb3cy3xwKkt8kHUKoqBdHG
      7Momi2WDoc5mOl0w1uIF02S1qDW2ATQqjWAAD8M0dSqqgG+nyiwPaFRhrIqq47RLuy5c8nVC
      zFNALNQQ9ccTY/qyEIEAwC6bJdg0zFTjqWlv5bMZu1+qNj3+O/xrA3hMxJKKpDx75VU/ieDV
      sLK/BTuiJ1CxaWgDsCwLwzAQRBFJFDENA0sQECwLSxAfOUV+8ruiKO645jdNE0EQP1dM0NPE
      sizquoUsCwgWGID84HkYxtYxMYKAXRKo6xaSJCAAumEiSuKvP7vttY2t74jw679LgoBpWtQf
      FKaw/eqaFsgC1E0LmyhiYSHu4kFalrV1svTgWoZpYVpgl7Z+B9Oy0A0LWRIQBQHDNBGErXt+
      sk3bsd3nLWurD5IgNLIBWMQW7zO/WUBE4rnnn2f22ns0jxwiPjdHx8g+fH7/tsJY6/P3WEtV
      8IY6OTo2vKMBzEzcYXDv3mdEGMviw5sbbFTh3PFO0msJljQH/+rEVnTkynqWyyslwnmdb+/z
      MZeq4fF7ON0m8OFSCdXm4N+f3S6Mw2JyLc29rILH62HIZjCZUfAFA7wx3ES+WOZnyzmi2Sr/
      4qW92PMZ/q8llX/T5+RiospLQ21kqxpne3eOKiiXq/zDQoZYpsIbJ/t4ezpJR8DJ7+3vJCCZ
      nJ/ZZF0xaG0O8J1+L//l2iJ7hgdxlDLMlAzODLezP/DwUHbT0PnLS4uMHd6DnkywUoGze9sY
      8dlYjWe5EK3idjkb2AAsg1RF5OVz58gnllmdnia8mcfyLLORKhPqVqna7axOLxJOa4zu7WZl
      eQ1vax+H9/YjyxIWEj09XczPzbF/pJfZ1SxiNU4yWyTQO4qzHCFWKNPSMwaArpUpK27y9+fY
      LNYZ29vL5PQiLb17ODTSQAXl9BrhvInP78BrFxka60D9xNn+nsEWOltcjMcNbNUSoiQyFy/x
      Bwe7aY6UEXyPdoQd6m8h6C0RrYsc7fDQ7CkSt7aGSqjJx58fc/HL5SKDks67ZZGTLQ4EQcAm
      CWzkqgiGzmrZw6D30cPL5/Pw58edvLOUp1cwsESLziYvPhmwBNx2CbkOTQ6JhWiOfX0tyJis
      5DQ8Lge+bX0BFtORPMcGmtHQCed0PN6PP1/TTQRRIF+pNHI+gIBs6dQMk5qiEuwe+pQwVn+L
      G6WmkVVMXn7pNNmVBQpqnVJpayC09Y1y+rmDrM/PkquUMQ2NYkXBtHl58dw59HIawe7nhbPn
      0EoJAEyjhpJPMbG4gVGroZhbS4hqqdxYRTUEgWCTm2/t9XBp4eHZbHNrJUb7fRw92MkbJ9oZ
      CdoxBYlXDndQKyqP9ANsJAuksHGqw8NqIk9OcnCizf3r/1+K5RnuCnA3nOL+ZoH3FzI4ggG+
      t6eFTpuBanexkNxd+MpaokBvmx+H18O/PdaLu1ZitmiAZZIzRF7f00wsU+CtpSzXllJcjZRw
      uZ18azjA9dXCw/0Aao23V7KcX0pxK1rC73Xx6qCXy+EiFrC3u5k/Gmtn0Gtv4BlAkOjrbeH2
      lYs4/W0c6/cQr3kBCa/XiWQX8LpNvAEHly7fZO/IEInZNTyereVLNrbC3FqCYMcgrUKOKzfv
      42rup5Zf5dKlJD17D1JeneDy5QSD+44hVpPY7G58zU5G+1LkVAm7tHUUZ7PbGqukkmTnQDP8
      +F6W04faefvqBuMpDdMmI6g1XtrfBE43rXaBTKrIj8czHBhtZyOS5fxymVCbn20PSi2Y3iyy
      VjOJFgOI+SIb9QIb7UEGvRJjzW7Kgp2DbhF5TzcnRkyuRYsMem2sphSGOoMsTsdp7tyFg9Qy
      KRoSe30yWk3lw7kUquzgdUvhalqi0wFvziQ50NPMPz/UTa5UJqE7cNZK/HQ6zaGBhyfE2J1O
      /sdv7CWfL7IpeRBLed6czXJsuJ2ZdJleh8BP59N0d4S+en6AZDJJW1sbYJFJpmlqa91+MGxD
      o+YDGGadSNaiv2V3KZ5p73GCd65/ya36/KRKCi6nY0dt0V+R7T1JaOMLyAf4KrA1+AEEmtu2
      S6reGatmYSmNdYQoItHnYfftcljoDSiMFbQ5wQDd2F3bdM1CKTzeb/GVM4AvCitpYGYaz4n0
      eTAtg9Jm4xnA56XkNMndfbxqNw28Cf6ar/nyadgZYEsY6wJrmyr9+w89VBgrsr5OV1/f9las
      15hfj7Nv6LPffdaZ3UhzNa7wjf3trISTRDSRb4+10+6QKJarXAznODTSjb2U5+21IoPtIV7p
      8bIUSzCluHhj5OH+ky0E7Ge+D+vvYvkOYOtuwwjfo7aygeBuw3nqFIJeQrl1C8fJVxBqabR4
      BcdwP7Xb5xHbuqiv7CJM3tOG6+QpUFKok8s4T5xBMMsoNy5g1cG2/3lsnc3oS7fQ1uM4X/w+
      xtKHCF3HkQN2tHuX0PMPifuwuQi89DK2oBcjOoOq+HB6NXJXtrLf7COH8R3oR3bLjTsDbAlj
      naG3Zw9H9/WyuTrLtVsTqPU68xO3GJ9ZJZNY4+rlK8TzVSIrM1y5fIVEoUpkaYorN+5RresU
      yxXUQoLLly4TTZcoZze5cukSC2tx4okklqWRSH6eDKkGwKwznTf43lg7PXadHG5e73VyN7WV
      z+12OjjW6qRiwHxa5Zv72kkWy9RqNcI1E3GHQH2xdRhBNJGcEvrqPZSbN8C95dgS/C2Y8Tn0
      ioR9aBRrcwZ1ahIp2ER9I45t3xGsahGknYeWGOrFit5DrzXhGGjHTMyjFy1EpwiCjOR3Upu4
      ixhsR+w6iKBXEJxBJG8ddWoZeXDg4ReuKxQ+/CXFqTDq2hq1xWl0/eP2aEv3ybz9Icr6RuMa
      wCex1AK37y9QzsWYHp/GCPVxaG8vguTi2OED5LJp0vkqJw4OkM4niKTguREfcw+EsabmVzh5
      5gSxlQUWwzFOPH+IYrKIkkuwtrBIzdbont9/gmlQVDQ+WkzwbszgaMjiRrREqb41sGVZwv7g
      l31+sImpjRzhosblhQQl3WIpU2HbfbIo4zx+AiwBqa0TwdeBfaADbWYKAKteRQz2IXltIDuR
      ukdwnfkWZnIV0WfH1CQcB0/gPHhg527EJjEdPdg62kBXEUK9SD47WCJgYdZ07CP7wJJxHR7F
      ktxIzQ605ST24RFE5yPKfQs2XJ12lM0KpqJ+5r8dIwepL08/GwYgyA6avC5sTj/tXSGSS1OM
      z6xid3mwyTKSJOBweXDIMqLoxqxGuHJniaamLedN0C1x+dJVdJsXp6Vw9dotSppBZ2crM+s5
      urZxpzcssoMRv0hONXDKApG8wkYVTrY5mUuViaXy/Lf7CX44vUm8pLJZUhlq8XGwr5nRgAOv
      XWLbErymQe3eVYxyFatm4DzzCnJbH469I8g9Awg2F6I/gOj1Y6TXweZBkAWschqjXEOPrYHd
      hbCb03WbB6m5FdFMUS/KSP4Aos8PzhByezOitwnR40NwiqjjNzArFSythtjSidTso76ysv2l
      9xymvjAJyPhefhX/6TP4xgZwDg0CDpztAkriK1goe2NhguVoho7hwzjLG2j+Pvb2fL6sNlVV
      Kf2//xPezPKX1MrHwzDqjMdrnOjeXY52pvcE4sXHi6P/MpG6R6GwilHenURPdvAE+kfXHute
      DbsJ/rLo3XuE3r2/+lfL02zKF44k2TjR/fkKZDQiRnTuN3avT80AXwtj7Q5d11Ei7+Cwck+7
      KU9EVejCacSedjOeGKXehjv3eF75r4WxHoMtYayNhkuJ/NwYIkHn/NNuxROTz9dp1R5P4OuR
      m+AfvfmTT/178p03WS795tz/myvTnD9/nuXozseUpmn+Ouv/tx7L5N6tNf7rP66QqRpkE3lu
      fSIqtJwt8lc/nuXa/9/eef3Idd13/DPtTq87W7iF3MKyy12uSElLUZZIW7EB+SmG3+y8BgHy
      nLf8JwaCIEASwAgEJZGjuFAExUgsIrkkt3B7n526U+6UW+e2PAyhEonLlWxatJXv0wwG99x7
      z5mD86vf73qTtqry7nurPNiREUt1/uXfO5+fPrbD7nqRf3p3ld2aQa1Y51/fW2frifaAbZnc
      /GiL926XMG2b5cd59hsWWlPi3Q/2kAyH/eLh+gNfuJ2hc+1eCce2WV/Os1P7fN2tw+ZSjp26
      RW77gF/+ZpeGbiPVJT5ePOQ/YZr85609fvG7bT7carKwUuQfP8pSVjtj27bF3OoBJY3DhbI/
      uX+PsN+LLxhlcXUNq7iH5A9yUNXQciu0o/1EhOdXJ1ktVjkzM0NPxIesGXhcFu22RVvXaMgK
      lqZQron4Q2H2d7c4yK5TFB1iMQEbD7qm4nIspEYdy+WlXi5iuAQCwu/n+pimiV65heA6Or/O
      HxY23lCYsZjNQtFEsA2qksPwsU7USzMcpibSLM8XKOckTr85zPpCgbETSc6d7eLmbJ5zJ5No
      TjdBd+XLo3t9vDwe58a9Iql4kJmpFPeXRU4PRVFkjUAiQbRVpeQKIDgKZTVEYbfC8Ikg2zsS
      jj9Ab+IIvojjMPewwIOCwoXjYRRNIisFOZHurI9al5h9mKUciJLdU/nxTJLbqy38bodaw2Dk
      ibOvaUnC8udOY7eb8eMJRuJuJMfL8e4IEzGHu2WL011+pJaGrqhUhOjhJ4BtWRQLWVStzc5+
      FoBwIsnm4kMerOVIhZ5vFFVpFLh54wZ72TzLOzmUepbdTJbbt+fQDJXFhVUatSL7hTqiKGJb
      FpZlUS9skm8YLK+sUMqssrSRp7z3mKvXbvDra7derNr+bwKXh3ZF5L17NQa7g5waTn4hrBmL
      efjtrzZoh8KMDYe5+pt1FLdAQHDx/u82iCYPiRK5XHhNnXf+e4djAymO9/qZXRS5cLYTKQtH
      g1hSk3ogwUR/iBPpTnPN+HCEe4siFhZz9/e4sfRslRi5LiEHwhyPe/GHA4x8rucA22Zho8nF
      c2nwCAxGDN65niFT0xkbSXCUQtHFnMLUQBhTknhnvsFIqpM3iMZCDEQ7m+xQYqxk/xQpP1y9
      +gFy24UQihAMp+n3F/Edm8b3nIvkPyXG6o1jKC2KhRIW0D96msGeOMmeAUaGj+PDApeLVFea
      cCiE2+WiWStTFVu4hTBnJ8/i97gYv3CJy69OPt+H/mOgbdD0+fnBuTgbOYlyWeagolCVDCTF
      oFhUOf/6IC5F4tG2zJXXhjBUjUpV49VXBpEOWrSfNrbtUJFtLr8+wH62wkd38qT6Inhd0FIM
      xFKdxZzBQFqgrRrkSgqlikKwO86PzncxkPAQ6U+iy19OPv1f1EWZx48LXLuVZXFfJldSOKgo
      KJpJQzbIF+q8ey3D/fkyA2NpXj0ZZ/RYmFpV5qCqcFBvP1XAXBEbuBNxQo5J3fHxo/Eoa0WV
      lmbS1g2yNZ2CqH51GNQbjPP2T/7q0+9T3/vsN12usmL2cWVm+Jkv+PuiZ2gIAUCIMtoTQbIT
      nOhOg8sHeBga6sEf8NDtdUjEThHye2lsF4iOjdDYznB2cpJUIoTH5yY2fBZ1ewuTZxx7fwrw
      ekDV2ZdcXJlOsrGYJyxAriKT21d4YyrG0pbI+GQ/J9Me7jw64PVX+gl6DZbXG8xcHEDgKewp
      LhCwWdmTeevSILXdCnuZOoqZoC/qJh0QCDgtVncaTJ2Ms1MBwSUjt6MIkTA9Q37aeon44LND
      zAOjffztaB/FqkLC7+LOvEPYkdneUJGjCX76l5PYmkbFEtAPqogEuDKVZHM5RzjoIVPW6E58
      dRLT8AS4OCSA28FtGOxI8BenY9RaOkmPza7mxW3J371E2B8CLyoxluPYtA3wC0fb4qI1QdKz
      8pyf6uujbVh4PW7cRyTGqtdH6S7d/Ub3+s4lwv6c4XK58X+dqg4HPIUXj3o++HUvMEzswjfr
      zfj/DfAdh7v555D4tHCa3yw8/0Kbw7ZlUquUaSmdRVKlBi1FQ26KSOpT3bjOtWabSrlz7VFs
      PF3TsP+UjEHHQRQVdNNBbmns5KRPSaYc22I/16QqmTi2TS7fpKlaNGoym3sNdgrKkWkHHdsm
      W5Ypy+aTeXRQFJ2dAwXdsNgtSWwUJKqKSamq0GrbmIaJftTJtG2KDR1waLY09ipah80Zh5ak
      s1WUUZ6IbTQlHdnoMEfvlmSa7ae/RUvR2azI1HQL0zSpqJ/vGHOotlSyrfbheYBvFw57q/Nk
      RZViZodozwBrc3cJxKNsPN4gEAqimjbh4FeXxG6vzFFp6aiaSVcq/kxWh9XFR0RiEeqSRTh4
      uB3x7ecBwNJU/uGXS0RPdLO/WqJUqpM3/QynBZYe5dgo66xv1fEoKrP7Miu7MsfCsF2Q+Xiu
      ysVzaXS7m7B4uKL7+naFx0WNrXyTgb4YAZfN/XWRfEWhpNrIcpuNjIioGTzYkylrDmpDIZEM
      IRzBhs9kqvziboU3BgL8x1wFl8tNb1cQH7CVbZARVdYOdM6kffzztS3McIzdzSIF1SIaCZAI
      eFDoI1j9oj/2P+sFqgZEg36y5QazFZ3JJwIZdbHFrzMSXrf7BTaBHBOxLfDKS1PUD7bZW1pi
      O1PEEtzs5ESiqRS+uE1t9zGFhoux4S5W1raIdI/wvQvjRCMhdjdLnJ4eZGFhgfMTI8xtVPAq
      eWotlVDvSUJSlpKiEe89gwAYWh1RCpFbnSXfNLgwNcaj+TUGTk1y/vTQtz0jn8GxufuwwpVL
      fYCb12b6mZ8rknjCBtGV8HN3u0KsK05Wgp++Ncz1O/v0D3cR9lQIH+s6MhNGMuyjvN0iFA0T
      8AAuN69NdPFoo0YyHWY06eOOZTM5GmN7P48c9FDzwUdrdd4+m3x62TVg6G02Wy6m+wPkRRVN
      MsgHjE423+3iWELg7laDybPHWNgQeXkyjYFFpqqjCzZjQ1+tDwAOdalNS/Aw7XUzPZSinvks
      U75ZV7G0NlU98CKbQG4EW6elm7TqDdLDp75AjDXcG8U0LWTLy5XLF2nlM3gjSQJCZ2lj3cf5
      /pVLlLY2UNptTFNH0XQ8oRRvXn4Tl95AiKR5483L2Fonre44FqYssnMg0Z2IgxCirzuB2mzw
      IrW/602JT1Zr/PbDDLOrIrPzRQbG+xjt6myA7bzCj98+RdTWcOkmRdlE121cjs18vs304NHd
      zExF4wczQ/R6DUS9ozTxcK3KwPEUYykBXVbQ/SHi4SB/8/YwZ7pDqA70olE53EplP1vj7qbI
      9bkDdhs2ExM9nO9yWC62wXHwhIL8/HI/WztlPt6oc/1BidvrTSLJED9/o5f59ack2xyHH547
      zs9Oxbmz/2XisKjPy8zpPhK29gKfAC4PI2NDzM/eJtQ1xFQqiMdIAj6SyTDegIuky6HLneDW
      7VkmJs5SW9rA6+uYRLJYZGkrR++J08Sp88mjNZK9I+gH69y8XWVscprK6iy3blcYP/cyjlTG
      HwiT6gkwbbXINywErwfLNIh0Hy708MeGPx7j7/76PJWCiB4J8fF/rTO/1eDcK0O0DppcPJPk
      /WubpIfSXDoT4v0PNhk+N4Cpm/QPxj/VEjsKxodi/OpRllhXnEhbYUfzslGQeLAv8dJEL0Nu
      kwtjnf5iRW2TToUJWjorkpvpZ0SkRsf6+PsxmM80mB6IcGuhyMO2lx8Oq3y4ZxGRGswVdS5O
      9fFSX4BmU6Zq+gkZMv92s8TMdN9Tx86V68xWdN4608P15TzzYhvd7aM/CON9Ma6ulmj7Q/wv
      twGK4iQLsIwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Customer breakdown' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global sales and profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sale Seasonability' width='192'>
      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
      ODzT/B8Za3TWakPOfwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales Dashboard' width='192'>
      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
      NQ5vNP8Cp5Kl9EigdxsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales by Sub-category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      rSFhNbbz2QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      ayel+X91AG+wDrwxvgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      Nf8fDaHXYl9sJTUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
